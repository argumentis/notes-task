{"version":3,"sources":["components/folderBlock/helper.js","reducersFolder/folderReducer.js","components/folderBlock/folderList/contextMenu.js","reducersFolder/notesReducer.js","components/notesBlock/helper.js","components/notesBlock/notesList/contextMenu.js","components/notesBlock/notesList/mobileVersionFiles/buttonsBlock.js","components/notesBlock/notesList/notesItem.js","components/notesBlock/notesList/index.js","components/folderBlock/folderList/mobileVersionFiles/buttonsBlock.js","components/folderBlock/folderList/folderItem.js","components/folderBlock/folderList/index.js","components/folderBlock/newFolderButton/Index.js","components/folderBlock/Index.js","components/notesBlock/Index.js","components/note/noteTime.js","components/note/noteTextArea.js","components/note/index.js","components/topMenu/closingMenu.js","components/topMenu/buttonsBlock.js","components/topMenu/index.js","App.js","reportWebVitals.js","reducersFolder/index.js","storeFolder/store.js","index.js"],"names":["arrPusher","arr","uniqid","require","push","id","name","disableInput","localStorage","setItem","JSON","stringify","arrRemoveFolder","arrFolders","arrNotes","folderId","newArr","_","filter","item","newArrNotes","changeFolder","type","status","value","map","SET_FOLDER","SET_FOLDER_ID","initialState","foldersList","parse","getItem","setFolder","payload","setFolderId","mouseX","mouseY","connect","store","folder","notesList","notes","dispatch","setFolderAction","setFolderIdAction","props","posContextMenu","setPosContextMenu","handleClose","style","cursor","Menu","keepMounted","open","onClose","anchorReference","anchorPosition","top","left","undefined","MenuItem","onClick","newData","cloneDeep","event","newDataFolders","newDataNotes","SET_NOTE","SET_NOTE_ID","noteId","setNotes","setNoteId","options","year","month","day","weekday","hour","minute","date","Date","toLocaleDateString","dateNote","toLocaleString","arrRemoveNote","changeNote","Id","noteValue","setNotesAction","setNoteIdAction","useStyles","makeStyles","theme","root","display","marginRight","marginLeft","marginTop","padding","width","height","classes","currId","className","IconButton","aria-label","backgroundColor","flex","flexDirection","alignItems","paddingLeft","rootInput","color","ref","itemId","itemName","itemStatus","itemDate","wrapperRef","useRef","useState","contextMenu","setContextMenu","useEffect","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","ListItem","button","onDoubleClick","preventDefault","clientX","clientY","selected","index","ListItemText","primary","TextField","onChange","InputProps","disableUnderline","disabled","autoFocus","Hidden","mdUp","overflow","currFolderId","filterRules","init","droppableId","provided","List","component","droppableProps","innerRef","draggableId","snapshot","draggableProps","dragHandleProps","placeholder","breakpoints","down","defaultValue","isCombineEnabled","textTransform","fontWeight","justifyContent","buttonStyle","Button","startIcon","LeftBlock","Paper","variant","square","CenterBlock","timeStyle","NoteTime","itemTime","textAreaStyle","border","resize","outline","onBlur","currItem","borderRadius","margin","redButton","yellowButton","greenButton","ClosingMenu","boxShadow","folderListDisplay","setFolderListDisplay","fontSize","borderTopLeftRadius","borderTopRightRadius","TopMenu","topMenu","main","center","right","onDragEnd","result","console","log","combine","smDown","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","state","action","createStore","devToolsEnhancer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.86338bec.chunk.js","sourcesContent":["import _ from 'lodash'\r\n// func for add new folders\r\nexport const arrPusher = (arr) => {\r\n  const uniqid = require('uniqid')\r\n  arr.push({\r\n    id: uniqid(),\r\n    name: 'New Folder',\r\n    disableInput: true\r\n  })\r\n  localStorage.setItem('arrFolders', JSON.stringify(arr))\r\n  return (arr)\r\n}\r\n// func for remove folder\r\nexport const arrRemoveFolder = (arrFolders, arrNotes, folderId) => {\r\n  const newArr = _.filter(arrFolders, function (item) { return item.id !== folderId })\r\n  const newArrNotes = _.filter(arrNotes, function (item) { return item.folderId !== folderId })\r\n  localStorage.setItem('arrFolders', JSON.stringify(newArr))\r\n  localStorage.setItem('arrNotes', JSON.stringify(newArrNotes))\r\n  return (newArr)\r\n}\r\n// func for change folder\r\nexport const changeFolder = (type, arr, folderId, status, value) => {\r\n  const newArr = arr.map(function (item) {\r\n    if (item.id === folderId) {\r\n      return (\r\n        {\r\n          id: item.id,\r\n          name: type === 'renameFolder' ? value : item.name,\r\n          disableInput: status\r\n        }\r\n      )\r\n    }\r\n    return (item)\r\n  })\r\n  localStorage.setItem('arrFolders', JSON.stringify(newArr))\r\n  return (newArr)\r\n}\r\n","const SET_FOLDER = 'SET_FOLDER'\r\nconst SET_FOLDER_ID = 'SET_FOLDER_ID'\r\n\r\nconst initialState = {\r\n  foldersList: JSON.parse(localStorage.getItem('arrFolders')) || [],\r\n  folderId: 0\r\n}\r\n\r\nexport function folderReducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_FOLDER:\r\n      return { ...state, foldersList: action.payload }\r\n\r\n    case SET_FOLDER_ID:\r\n      return { ...state, folderId: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport function setFolder (foldersList) {\r\n  return {\r\n    type: 'SET_FOLDER',\r\n    payload: foldersList\r\n  }\r\n}\r\n\r\nexport function setFolderId (folderId) {\r\n  return {\r\n    type: 'SET_FOLDER_ID',\r\n    payload: folderId\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport _ from 'lodash'\r\nimport { arrPusher, arrRemoveFolder, changeFolder } from '../helper'\r\nimport { connect } from 'react-redux'\r\nimport { setFolder, setFolderId } from '../../../reducersFolder/folderReducer'\r\n\r\nconst initialState = {\r\n  mouseX: null,\r\n  mouseY: null\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  const { foldersList, folderId } = store.folder\r\n  const { notesList } = store.notes\r\n  return {\r\n    foldersList,\r\n    folderId,\r\n    notesList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFolderAction: foldersList => dispatch(setFolder(foldersList)),\r\n    setFolderIdAction: folderId => dispatch(setFolderId(folderId))\r\n  }\r\n}\r\n\r\nfunction ContextMenu (props) {\r\n  const { setFolderAction, foldersList, setFolderIdAction, folderId, posContextMenu, setPosContextMenu, notesList } = props\r\n  const { mouseX, mouseY } = posContextMenu\r\n\r\n  // func for close context menu\r\n  const handleClose = () => {\r\n    setPosContextMenu(initialState)\r\n  }\r\n\r\n  // func for push new folder to array\r\n  const addFolderButton = () => {\r\n    const newData = _.cloneDeep(foldersList)\r\n    setFolderAction(arrPusher(newData))\r\n    handleClose()\r\n  }\r\n\r\n  // func for change folder name\r\n  const renameFolderButton = (event) => {\r\n    handleClose()\r\n    const newData = _.cloneDeep(foldersList)\r\n    setFolderAction(changeFolder('changeStatus', newData, folderId, false))\r\n  }\r\n\r\n  // func for delete folder from array\r\n  const removeFolderButton = () => {\r\n    const newDataFolders = _.cloneDeep(foldersList)\r\n    const newDataNotes = _.cloneDeep(notesList)\r\n    setFolderAction(arrRemoveFolder(newDataFolders, newDataNotes, folderId))\r\n    setFolderIdAction(0)\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <div style={{ cursor: 'context-menu' }}>\r\n      <Menu\r\n        keepMounted\r\n        open={mouseY !== null}\r\n        onClose={handleClose}\r\n        anchorReference=\"anchorPosition\"\r\n        anchorPosition={\r\n          mouseY !== null && mouseX !== null // take X Y position context menu\r\n            ? { top: mouseY, left: mouseX }\r\n            : undefined\r\n        }\r\n      >\r\n        <MenuItem onClick={addFolderButton}>Add folder</MenuItem>\r\n        <MenuItem onClick={renameFolderButton}>Rename folder</MenuItem>\r\n        <MenuItem onClick={removeFolderButton}>Delete folder</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ContextMenu)\r\n\r\nContextMenu.propTypes = {\r\n  setFolderAction: PropTypes.func.isRequired,\r\n  foldersList: PropTypes.array.isRequired,\r\n  notesList: PropTypes.array.isRequired,\r\n  setPosContextMenu: PropTypes.func.isRequired,\r\n  posContextMenu: PropTypes.object.isRequired,\r\n  setFolderIdAction: PropTypes.func.isRequired,\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ])\r\n}\r\n","const SET_NOTE = 'SET_NOTE'\r\nconst SET_NOTE_ID = 'SET_NOTE_ID'\r\n\r\nconst initialState = {\r\n  notesList: JSON.parse(localStorage.getItem('arrNotes')) || [],\r\n  noteId: 0\r\n}\r\n\r\nexport function notesReducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_NOTE:\r\n      return { ...state, notesList: action.payload }\r\n\r\n    case SET_NOTE_ID:\r\n      return { ...state, noteId: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport function setNotes (notesList) {\r\n  return {\r\n    type: 'SET_NOTE',\r\n    payload: notesList\r\n  }\r\n}\r\n\r\nexport function setNoteId (noteId) {\r\n  return {\r\n    type: 'SET_NOTE_ID',\r\n    payload: noteId\r\n  }\r\n}\r\n","import _ from 'lodash'\r\n\r\nconst options = {\r\n  year: 'numeric',\r\n  month: 'long',\r\n  day: 'numeric',\r\n  weekday: 'long',\r\n  hour: 'numeric',\r\n  minute: 'numeric'\r\n}\r\n// func for add new note\r\nexport const arrPusher = (arr, folderId) => {\r\n  const uniqid = require('uniqid')\r\n  const date = new Date()\r\n  arr.push({\r\n    id: uniqid(),\r\n    folderId: folderId,\r\n    name: 'New Note',\r\n    disableInput: true,\r\n    date: date.toLocaleDateString(),\r\n    dateNote: date.toLocaleString('en-US', options)\r\n  })\r\n  localStorage.setItem('arrNotes', JSON.stringify(arr))\r\n  return (arr)\r\n}\r\n// func for remove note\r\nexport const arrRemoveNote = (arr, noteId) => {\r\n  const newArr = _.filter(arr, function (item) { return item.id !== noteId })\r\n  localStorage.setItem('arrNotes', JSON.stringify(newArr))\r\n  return (newArr)\r\n}\r\n// func for change note\r\nexport const changeNote = (type, arr, Id, status, value) => {\r\n  const newArr = arr.map(function (item) {\r\n    if (item.id === Id) {\r\n      return (\r\n        {\r\n          id: item.id,\r\n          folderId: type === 'changeFolderId' ? value : item.folderId,\r\n          name: type === 'renameNote' ? value : item.name,\r\n          disableInput: status,\r\n          noteValue: type === 'changeNoteValue' ? value : item.noteValue || '',\r\n          date: item.date,\r\n          dateNote: item.dateNote\r\n        }\r\n      )\r\n    }\r\n    return (item)\r\n  })\r\n  localStorage.setItem('arrNotes', JSON.stringify(newArr))\r\n  return (newArr)\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport _ from 'lodash'\r\nimport { arrPusher, arrRemoveNote, changeNote } from '../helper'\r\nimport { connect } from 'react-redux'\r\nimport { setNotes, setNoteId } from '../../../reducersFolder/notesReducer'\r\n\r\nconst initialState = {\r\n  mouseX: null,\r\n  mouseY: null\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  const { notesList, noteId } = store.notes\r\n  const { folderId } = store.folder\r\n  return {\r\n    notesList,\r\n    noteId,\r\n    folderId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNotesAction: notesList => dispatch(setNotes(notesList)),\r\n    setNoteIdAction: noteId => dispatch(setNoteId(noteId))\r\n  }\r\n}\r\n\r\nfunction ContextMenu (props) {\r\n  const { setNotesAction, notesList, setNoteIdAction, noteId, posContextMenu, setPosContextMenu, folderId } = props\r\n  const { mouseX, mouseY } = posContextMenu\r\n\r\n  // func for close context menu\r\n  const handleClose = () => {\r\n    setPosContextMenu(initialState)\r\n  }\r\n\r\n  // func for push new note to array\r\n  const addNoteButton = () => {\r\n    const newData = _.cloneDeep(notesList)\r\n    setNotesAction(arrPusher(newData, folderId))\r\n    handleClose()\r\n  }\r\n\r\n  // func for change note name\r\n  const renameNoteButton = (event) => {\r\n    handleClose()\r\n    const newData = _.cloneDeep(notesList)\r\n    setNotesAction(changeNote('changeStatus', newData, noteId, false))\r\n  }\r\n\r\n  // func for delete note from array\r\n  const removeNoteButton = () => {\r\n    const newData = _.cloneDeep(notesList)\r\n    setNotesAction(arrRemoveNote(newData, noteId))\r\n    setNoteIdAction(0)\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <div style={{ cursor: 'context-menu' }}>\r\n      <Menu\r\n        keepMounted\r\n        open={mouseY !== null}\r\n        onClose={handleClose}\r\n        anchorReference=\"anchorPosition\"\r\n        anchorPosition={\r\n          mouseY !== null && mouseX !== null // take X Y position context menu\r\n            ? { top: mouseY, left: mouseX }\r\n            : undefined\r\n        }\r\n      >\r\n        <MenuItem onClick={addNoteButton}>Add Note</MenuItem>\r\n        <MenuItem onClick={renameNoteButton}>Rename Note</MenuItem>\r\n        <MenuItem onClick={removeNoteButton}>Delete Note</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ContextMenu)\r\n\r\nContextMenu.propTypes = {\r\n  setNotesAction: PropTypes.func.isRequired,\r\n  notesList: PropTypes.array.isRequired,\r\n  setPosContextMenu: PropTypes.func.isRequired,\r\n  posContextMenu: PropTypes.object.isRequired,\r\n  setNoteIdAction: PropTypes.func.isRequired,\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ])\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { setNotes, setNoteId } from '../../../../reducersFolder/notesReducer'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport CreateIcon from '@material-ui/icons/Create'\r\nimport { arrRemoveNote, changeNote } from '../../helper'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    marginRight: '20px',\r\n    '& > *': {\r\n      marginLeft: '5px',\r\n      marginTop: '30px',\r\n      padding: '0px',\r\n      width: '40px',\r\n      height: '20px'\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { noteId, notesList } = store.notes\r\n\r\n  return {\r\n    noteId,\r\n    notesList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNotesAction: notesList => dispatch(setNotes(notesList)),\r\n    setNoteIdAction: noteId => dispatch(setNoteId(noteId))\r\n  }\r\n}\r\n\r\nfunction ButtonsBlockNotesMobil (props) {\r\n  const classes = useStyles()\r\n  const { notesList, currId, setNotesAction, setNoteIdAction } = props\r\n\r\n  // func for change note name\r\n  const renameNoteButton = (event) => {\r\n    const newData = _.cloneDeep(notesList)\r\n    setNotesAction(changeNote('changeStatus', newData, currId, false))\r\n  }\r\n\r\n  // func for delete note from array\r\n  const removeNoteButton = () => {\r\n    const newData = _.cloneDeep(notesList)\r\n    setNotesAction(arrRemoveNote(newData, currId))\r\n    setNoteIdAction(0)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton aria-label='Rename Folder' onClick={renameNoteButton}>\r\n        <CreateIcon />\r\n      </IconButton>\r\n      <IconButton aria-label='Delete folder' onClick={removeNoteButton}>\r\n        <CloseIcon />\r\n      </IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ButtonsBlockNotesMobil)\r\n\r\nButtonsBlockNotesMobil.propTypes = {\r\n  currId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  notesList: PropTypes.array.isRequired,\r\n  setNotesAction: PropTypes.func.isRequired,\r\n  setNoteIdAction: PropTypes.func.isRequired\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport _ from 'lodash'\r\nimport { changeNote } from '../helper'\r\nimport ContextMenu from './contextMenu'\r\nimport { connect } from 'react-redux'\r\nimport { setNotes, setNoteId } from '../../../reducersFolder/notesReducer'\r\nimport ButtonsBlockNotesMobil from './mobileVersionFiles/buttonsBlock'\r\nimport Hidden from '@material-ui/core/Hidden'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& .Mui-selected': {\r\n      backgroundColor: '#fde46e'\r\n    },\r\n    '& .MuiListItemText-root': {\r\n      flex: '0'\r\n    },\r\n    '& .MuiListItem-root': {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'flex-start',\r\n      paddingLeft: '40px'\r\n    }\r\n  },\r\n  rootInput: {\r\n    '& .Mui-focused': {\r\n      backgroundColor: '#75c1ff'\r\n    },\r\n    '& .Mui-disabled': {\r\n      color: 'black',\r\n      backgroundColor: 'none'\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { notesList, noteId } = store.notes\r\n  return {\r\n    notesList,\r\n    noteId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNotesAction: notesList => dispatch(setNotes(notesList)),\r\n    setNoteIdAction: noteId => dispatch(setNoteId(noteId))\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  mouseX: null,\r\n  mouseY: null\r\n}\r\n\r\nfunction NotesItem (props, event) {\r\n  const classes = useStyles()\r\n  const { notesList, noteId, setNoteIdAction, setNotesAction, itemId, itemName, itemStatus, itemDate } = props\r\n  const wrapperRef = useRef(null)\r\n  const [contextMenu, setContextMenu] = useState(initialState)\r\n  const uniqid = require('uniqid')\r\n\r\n  // func for change status input when click outside note item\r\n  function useOutsideClose (ref) {\r\n    useEffect(() => {\r\n      function handleClickOutside (event) {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          const newData = _.cloneDeep(notesList)\r\n          setNotesAction(changeNote('renameNote', newData, noteId, true, itemName))\r\n        }\r\n      }\r\n      document.addEventListener('mousedown', handleClickOutside)\r\n      return () => {\r\n        document.removeEventListener('mousedown', handleClickOutside)\r\n      }\r\n    }, [ref])\r\n  }\r\n\r\n  // func for set selected folder\r\n  const handleListItemClick = (event, index) => {\r\n    if (noteId !== itemId) {\r\n      setNoteIdAction(index)\r\n    }\r\n  }\r\n\r\n  // func for set coordinates context menu\r\n  const handleDoubleClick = (event) => {\r\n    event.preventDefault()\r\n    setContextMenu({\r\n      mouseX: event.clientX - 2,\r\n      mouseY: event.clientY - 4\r\n    })\r\n  }\r\n\r\n  // func for change value name note onChange\r\n  const handleOnChange = (event) => {\r\n    const newData = _.cloneDeep(notesList)\r\n    setNotesAction(changeNote('renameNote', newData, noteId, itemStatus, event.target.value))\r\n  }\r\n\r\n  // monitors the state of input\r\n  if (itemStatus === false) {\r\n    useOutsideClose(wrapperRef)\r\n  }\r\n\r\n  return (\r\n    <div ref={wrapperRef} className={classes.root}>\r\n      <ListItem\r\n        button\r\n        onDoubleClick={handleDoubleClick}\r\n        selected={noteId === itemId}\r\n        onClick={(event) => handleListItemClick(event, itemId)}\r\n      >\r\n        <ListItemText\r\n          primary={\r\n            <TextField\r\n              id={uniqid()}\r\n              className={classes.rootInput}\r\n              value={itemName}\r\n              onChange={handleOnChange}\r\n              InputProps={{\r\n                disableUnderline: true,\r\n                disabled: itemStatus,\r\n                autoFocus: true\r\n              }}\r\n            />\r\n          }\r\n        />\r\n        <div>\r\n          {itemDate}\r\n        </div>\r\n      </ListItem>\r\n      <Hidden mdUp>\r\n        <ButtonsBlockNotesMobil currId={itemId}/>\r\n      </Hidden>\r\n      <ContextMenu\r\n        posContextMenu={contextMenu}\r\n        setPosContextMenu={setContextMenu}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NotesItem)\r\n\r\nNotesItem.propTypes = {\r\n  itemId: PropTypes.string.isRequired,\r\n  itemName: PropTypes.string.isRequired,\r\n  itemDate: PropTypes.string.isRequired,\r\n  itemStatus: PropTypes.bool.isRequired,\r\n  setNotesAction: PropTypes.func.isRequired,\r\n  notesList: PropTypes.array.isRequired,\r\n  setNoteIdAction: PropTypes.func.isRequired,\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ])\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport { connect } from 'react-redux'\r\nimport NotesItem from './notesItem'\r\nimport _ from 'lodash'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    overflow: 'auto',\r\n    backgroundColor: 'none',\r\n    '& > *': {\r\n      padding: '0px',\r\n      width: '100%'\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { notesList } = store.notes\r\n  const { folderId } = store.folder\r\n  return {\r\n    notesList,\r\n    folderId\r\n  }\r\n}\r\n\r\nfunction SelectedListItemNotes (props) {\r\n  const classes = useStyles()\r\n  const { notesList, folderId, currFolderId } = props\r\n  const uniqid = require('uniqid')\r\n  const filterRules = !currFolderId ? folderId : currFolderId\r\n  const init = _.filter(notesList, function (item) { return item.folderId === filterRules })\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Droppable droppableId=\"droppable\">\r\n        {(provided) => (\r\n          <List\r\n            className=\"characters\"\r\n            component=\"nav\"\r\n            aria-label=\"main mailbox folders\"\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            {init.map((item, index) => (\r\n              <Draggable\r\n                index={index}\r\n                draggableId={item.id}\r\n                key={item.id}\r\n                type=\"TASK\"\r\n              >\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    <NotesItem\r\n                      key={uniqid()}\r\n                      itemId={item.id}\r\n                      itemName={item.name}\r\n                      itemStatus={item.disableInput}\r\n                      itemDate={item.date}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </List>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(SelectedListItemNotes)\r\n\r\nSelectedListItemNotes.propTypes = {\r\n  currFolderId: PropTypes.string,\r\n  notesList: PropTypes.array.isRequired,\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ])\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { setNotes, setNoteId } from '../../../../reducersFolder/notesReducer'\r\nimport { setFolder, setFolderId } from '../../../../reducersFolder/folderReducer'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport CreateIcon from '@material-ui/icons/Create'\r\nimport NoteAddOutlinedIcon from '@material-ui/icons/NoteAddOutlined'\r\nimport { arrRemoveFolder, changeFolder } from '../../helper'\r\nimport { arrPusher } from '../../../notesBlock/helper'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    marginRight: '20px',\r\n    '& > *': {\r\n      marginLeft: '5px',\r\n      marginTop: '5px',\r\n      padding: '0px',\r\n      width: '40px',\r\n      height: '20px'\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { noteId, notesList } = store.notes\r\n  const { folderId, foldersList } = store.folder\r\n\r\n  return {\r\n    noteId,\r\n    folderId,\r\n    notesList,\r\n    foldersList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNotesAction: notesList => dispatch(setNotes(notesList)),\r\n    setNoteIdAction: noteId => dispatch(setNoteId(noteId)),\r\n    setFolderAction: foldersList => dispatch(setFolder(foldersList)),\r\n    setFolderIdAction: folderId => dispatch(setFolderId(folderId))\r\n  }\r\n}\r\n\r\nfunction ButtonsBlockNotesMobil (props) {\r\n  const classes = useStyles()\r\n  const { notesList, currId, setNotesAction, foldersList, setFolderAction, setFolderIdAction } = props\r\n\r\n  // func for change folder name\r\n  const renameFolderButton = (event) => {\r\n    const newData = _.cloneDeep(foldersList)\r\n    setFolderAction(changeFolder('changeStatus', newData, currId, false))\r\n  }\r\n\r\n  // func for add new notes from folder\r\n  const addNoteButton = () => {\r\n    if (currId !== 0) {\r\n      const newData = _.cloneDeep(notesList)\r\n      setNotesAction(arrPusher(newData, currId))\r\n    }\r\n  }\r\n\r\n  // func for remove folder\r\n  const removeFolder = () => {\r\n    const newDataFolders = _.cloneDeep(foldersList)\r\n    const newDataNotes = _.cloneDeep(notesList)\r\n    setFolderAction(arrRemoveFolder(newDataFolders, newDataNotes, currId))\r\n    setFolderIdAction(0)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton aria-label='Rename Folder' onClick={renameFolderButton}>\r\n        <CreateIcon />\r\n      </IconButton>\r\n      <IconButton aria-label='Add note' onClick={addNoteButton}>\r\n        <NoteAddOutlinedIcon />\r\n      </IconButton>\r\n      <IconButton aria-label='Delete folder' onClick={removeFolder}>\r\n        <CloseIcon />\r\n      </IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ButtonsBlockNotesMobil)\r\n\r\nButtonsBlockNotesMobil.propTypes = {\r\n  currId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  notesList: PropTypes.array.isRequired,\r\n  foldersList: PropTypes.array.isRequired,\r\n  setNotesAction: PropTypes.func.isRequired,\r\n  setFolderAction: PropTypes.func.isRequired,\r\n  setNoteIdAction: PropTypes.func.isRequired,\r\n  setFolderIdAction: PropTypes.func.isRequired\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport _ from 'lodash'\r\nimport { changeFolder } from '../helper'\r\nimport ContextMenu from './contextMenu'\r\nimport { connect } from 'react-redux'\r\nimport { setFolder, setFolderId } from '../../../reducersFolder/folderReducer'\r\nimport { setNoteId } from '../../../reducersFolder/notesReducer'\r\nimport SelectedListItemNotes from '../../notesBlock/notesList'\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport ButtonsBlockNotesMobil from './mobileVersionFiles/buttonsBlock'\r\nimport { DragDropContext } from 'react-beautiful-dnd'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiListItem-root': {\r\n      height: '20px',\r\n      padding: '15px 0px 15px 15px',\r\n      [theme.breakpoints.down('sm')]: {\r\n        backgroundColor: '#cccccc',\r\n        height: '60px'\r\n      }\r\n    }\r\n  },\r\n  rootInput: {\r\n    '& .Mui-focused': {\r\n      backgroundColor: '#75c1ff'\r\n    },\r\n    '& .Mui-disabled': {\r\n      color: 'black',\r\n      backgroundColor: 'none'\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { foldersList, folderId } = store.folder\r\n  const { noteId } = store.notes\r\n  return {\r\n    foldersList,\r\n    folderId,\r\n    noteId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFolderAction: foldersList => dispatch(setFolder(foldersList)),\r\n    setFolderIdAction: folderId => dispatch(setFolderId(folderId)),\r\n    setNoteIdAction: noteId => dispatch(setNoteId(noteId))\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  mouseX: null,\r\n  mouseY: null\r\n}\r\n\r\nfunction FolderItem (props, event) {\r\n  const classes = useStyles()\r\n  const { foldersList, folderId, setFolderIdAction, setFolderAction, itemId, itemName, itemStatus, setNoteIdAction, noteId } = props\r\n  const wrapperRef = useRef(null)\r\n  const [contextMenu, setContextMenu] = useState(initialState)\r\n\r\n  // func for change status input when click outside folder item\r\n  function useOutsideClose (ref) {\r\n    useEffect(() => {\r\n      function handleClickOutside (event) {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          const newData = _.cloneDeep(foldersList)\r\n          setFolderAction(changeFolder('renameFolder', newData, folderId, true, itemName))\r\n        }\r\n      }\r\n      document.addEventListener('mousedown', handleClickOutside)\r\n      return () => {\r\n        document.removeEventListener('mousedown', handleClickOutside)\r\n      }\r\n    }, [ref])\r\n  }\r\n\r\n  // func for set selected folder\r\n  const handleListItemClick = (event, index) => {\r\n    if (folderId !== itemId) {\r\n      setFolderIdAction(index)\r\n    }\r\n    if (noteId !== 0) {\r\n      setNoteIdAction(0)\r\n    }\r\n  }\r\n\r\n  // func for set coordinates context menu\r\n  const handleDoubleClick = (event) => {\r\n    event.preventDefault()\r\n    setContextMenu({\r\n      mouseX: event.clientX - 2,\r\n      mouseY: event.clientY - 4\r\n    })\r\n  }\r\n\r\n  // func for change value name folder onChange\r\n  const handleOnChange = (event) => {\r\n    const newData = _.cloneDeep(foldersList)\r\n    setFolderAction(changeFolder('renameFolder', newData, folderId, itemStatus, event.target.value))\r\n  }\r\n\r\n  // monitors the state of input\r\n  if (itemStatus === false) {\r\n    useOutsideClose(wrapperRef)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root} ref={wrapperRef}>\r\n        <ListItem\r\n          button\r\n          onDoubleClick={handleDoubleClick}\r\n          selected={folderId === itemId}\r\n          onClick={(event) => handleListItemClick(event, itemId)}\r\n        >\r\n          <ListItemText\r\n            primary={\r\n              <TextField\r\n                id={itemId}\r\n                className={classes.rootInput}\r\n                defaultValue={itemName}\r\n                onChange={handleOnChange}\r\n                InputProps={{\r\n                  disableUnderline: true,\r\n                  disabled: itemStatus,\r\n                  autoFocus: true\r\n                }}\r\n              />\r\n            }\r\n          />\r\n           <Hidden mdUp>\r\n           <ButtonsBlockNotesMobil currId={itemId}/>\r\n           </Hidden>\r\n        </ListItem>\r\n      </div>\r\n      <Hidden mdUp>\r\n        <DragDropContext>\r\n          <SelectedListItemNotes currFolderId={itemId}/>\r\n        </DragDropContext>\r\n      </Hidden>\r\n      <ContextMenu\r\n        posContextMenu={contextMenu}\r\n        setPosContextMenu={setContextMenu}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FolderItem)\r\n\r\nFolderItem.propTypes = {\r\n  itemId: PropTypes.string.isRequired,\r\n  itemName: PropTypes.string.isRequired,\r\n  itemStatus: PropTypes.bool.isRequired,\r\n  setFolderAction: PropTypes.func.isRequired,\r\n  foldersList: PropTypes.array.isRequired,\r\n  setFolderIdAction: PropTypes.func.isRequired,\r\n  setNoteIdAction: PropTypes.func.isRequired,\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ])\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport { connect } from 'react-redux'\r\nimport FolderItem from './folderItem'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    overflow: 'auto',\r\n    backgroundColor: 'none'\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { foldersList } = store.folder\r\n  return {\r\n    foldersList\r\n  }\r\n}\r\n\r\nfunction SelectedListItem (props) {\r\n  const classes = useStyles()\r\n  const { foldersList } = props\r\n  const uniqid = require('uniqid')\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Droppable droppableId=\"droppableFolder\" isCombineEnabled>\r\n        {(provided) => (\r\n          <List\r\n            className=\"characters\"\r\n            component=\"nav\"\r\n            aria-label=\"main mailbox folders\"\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            {foldersList.map((item, index) => (\r\n              <Draggable\r\n                index={index}\r\n                draggableId={item.id}\r\n                key={item.id} type=\"TASK\"\r\n              >\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    <FolderItem\r\n                      key={uniqid()}\r\n                      itemId={item.id}\r\n                      itemName={item.name}\r\n                      itemStatus={item.disableInput}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </List>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(SelectedListItem)\r\n\r\nSelectedListItem.propTypes = {\r\n  foldersList: PropTypes.array.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport { connect } from 'react-redux'\r\nimport { setFolder } from '../../../reducersFolder/folderReducer'\r\nimport { arrPusher } from '../helper'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    textTransform: 'none',\r\n    fontWeight: 'bold',\r\n    width: '100%',\r\n    display: '  flex',\r\n    justifyContent: 'flex-start',\r\n    paddingLeft: '15px'\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { foldersList } = store.folder\r\n  return {\r\n    foldersList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFolderAction: foldersList => dispatch(setFolder(foldersList))\r\n  }\r\n}\r\n\r\nfunction IconLabelButtons (props) {\r\n  const classes = useStyles()\r\n  const { foldersList, setFolderAction } = props\r\n  const newData = _.cloneDeep(foldersList)\r\n\r\n  // func for add folder to array\r\n  const handleButtonClick = () => {\r\n    setFolderAction(arrPusher(newData))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.buttonStyle}>\r\n      <Button\r\n        className={classes.root}\r\n        startIcon={<AddCircleOutlineIcon />}\r\n        onClick={handleButtonClick}\r\n      >\r\n        New Folder\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IconLabelButtons)\r\n\r\nIconLabelButtons.propTypes = {\r\n  foldersList: PropTypes.array.isRequired,\r\n  setFolderAction: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport SelectedListItem from './folderList/index'\r\nimport IconLabelButtons from './newFolderButton/Index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    '& > *': {\r\n      display: 'flex',\r\n      height: '95vh',\r\n      flexDirection: 'column',\r\n      justifyContent: 'space-between',\r\n      backgroundColor: '#f7f6f7',\r\n      [theme.breakpoints.down('sm')]: {\r\n        height: '100vh'\r\n      }\r\n    }\r\n  }\r\n}))\r\n\r\nexport default function LeftBlock () {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper variant=\"outlined\" square>\r\n        <SelectedListItem/>\r\n        <IconLabelButtons/>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport SelectedListItemNotes from './notesList'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    '& > *': {\r\n      display: 'flex',\r\n      height: '95vh',\r\n      flexDirection: 'column',\r\n      justifyContent: 'space-between',\r\n      backgroundColor: '#f7f6f7'\r\n    }\r\n  }\r\n}))\r\n\r\nexport default function CenterBlock () {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper variant=\"outlined\" square>\r\n        <SelectedListItemNotes/>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  timeStyle: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    color: '#bababa',\r\n    marginTop: '20px'\r\n  }\r\n}))\r\n\r\nexport default function NoteTime (props) {\r\n  const classes = useStyles()\r\n  const { itemTime } = props\r\n\r\n  return (\r\n    <div className={classes.timeStyle}>\r\n      {itemTime}\r\n    </div>\r\n  )\r\n}\r\n\r\nNoteTime.propTypes = {\r\n  itemTime: PropTypes.string.isRequired\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { setNoteId, setNotes } from '../../reducersFolder/notesReducer'\r\nimport { changeNote } from '../notesBlock/helper'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textAreaStyle: {\r\n    width: '99%',\r\n    border: '0px',\r\n    height: '85vh',\r\n    resize: 'none',\r\n    outline: 'none',\r\n    backgroundColor: '#f7f6f7',\r\n    marginTop: '20px'\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { noteId, notesList } = store.notes\r\n\r\n  return {\r\n    noteId,\r\n    notesList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNoteIdAction: noteId => dispatch(setNoteId(noteId)),\r\n    setNotesAction: notesList => dispatch(setNotes(notesList))\r\n  }\r\n}\r\n\r\nfunction NoteTextArea (props) {\r\n  const classes = useStyles()\r\n  const { noteId, notesList, setNotesAction, defaultValue } = props\r\n\r\n  // func for change note value onChange\r\n  const handleOnlChange = (event) => {\r\n    const newData = _.cloneDeep(notesList)\r\n    setNotesAction(changeNote('changeNoteValue', newData, noteId, true, event.target.value))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <textarea\r\n        className={classes.textAreaStyle}\r\n        defaultValue={defaultValue}\r\n        onBlur={handleOnlChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NoteTextArea)\r\n\r\nNoteTextArea.propTypes = {\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  notesList: PropTypes.array.isRequired,\r\n  setNotesAction: PropTypes.func.isRequired,\r\n  defaultValue: PropTypes.string\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport NoteTime from './noteTime'\r\nimport NoteTextArea from './noteTextArea'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    '& > *': {\r\n      display: 'flex',\r\n      height: '95vh',\r\n      flexDirection: 'column',\r\n      backgroundColor: '#f7f6f7'\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { noteId, notesList } = store.notes\r\n\r\n  return {\r\n    noteId,\r\n    notesList\r\n  }\r\n}\r\n\r\nfunction NoteText (props) {\r\n  const classes = useStyles()\r\n  const { noteId, notesList } = props\r\n  const uniqid = require('uniqid')\r\n  const currItem = _.filter(notesList, function (item) { return item.id === noteId })\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper variant=\"outlined\" square>\r\n        {currItem.map((item) => (\r\n          <div key={uniqid()}>\r\n            <NoteTime itemTime={item.dateNote}/>\r\n            <NoteTextArea defaultValue={item.noteValue}/>\r\n          </div>\r\n        ))}\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(NoteText)\r\n\r\nNoteText.propTypes = {\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  notesList: PropTypes.array.isRequired\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      height: '10px',\r\n      width: '10px',\r\n      borderRadius: '10px',\r\n      margin: '7px 0px 0px 5px'\r\n    }\r\n  },\r\n  redButton: {\r\n    backgroundColor: '#fd5a52'\r\n  },\r\n  yellowButton: {\r\n    backgroundColor: '#fdbb3f'\r\n  },\r\n  greenButton: {\r\n    backgroundColor: '#31c747'\r\n  }\r\n}))\r\n\r\nexport default function ClosingMenu () {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.redButton}></div>\r\n      <div className={classes.yellowButton}></div>\r\n      <div className={classes.greenButton}></div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { setNotes, setNoteId } from '../../reducersFolder/notesReducer'\r\nimport { setFolder, setFolderId } from '../../reducersFolder/folderReducer'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ViewCompactOutlinedIcon from '@material-ui/icons/ViewCompactOutlined'\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined'\r\nimport NoteAddOutlinedIcon from '@material-ui/icons/NoteAddOutlined'\r\nimport { arrPusher, arrRemoveNote } from '../notesBlock/helper'\r\nimport { arrRemoveFolder } from '../folderBlock/helper'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    marginLeft: '30%',\r\n    '& > *': {\r\n      marginLeft: '15px',\r\n      marginTop: '5px',\r\n      padding: '0px',\r\n      width: '40px',\r\n      height: '20px',\r\n      borderRadius: '3px',\r\n      backgroundColor: '#f5f5f5',\r\n      boxShadow: '0 5px 4px -4px rgba(0, 0, 0, .2) '\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { noteId, notesList } = store.notes\r\n  const { folderId, foldersList } = store.folder\r\n\r\n  return {\r\n    noteId,\r\n    folderId,\r\n    notesList,\r\n    foldersList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNotesAction: notesList => dispatch(setNotes(notesList)),\r\n    setNoteIdAction: noteId => dispatch(setNoteId(noteId)),\r\n    setFolderAction: foldersList => dispatch(setFolder(foldersList)),\r\n    setFolderIdAction: folderId => dispatch(setFolderId(folderId))\r\n  }\r\n}\r\n\r\nfunction ButtonsBlock (props) {\r\n  const classes = useStyles()\r\n  const { folderListDisplay, setFolderListDisplay, notesList, folderId, setNotesAction, setNoteIdAction, noteId, foldersList, setFolderAction, setFolderIdAction } = props\r\n\r\n  // func for close/open folder lost\r\n  const changeDisplay = () => {\r\n    if (folderListDisplay === 'block') {\r\n      return setFolderListDisplay('none')\r\n    }\r\n    return setFolderListDisplay('block')\r\n  }\r\n\r\n  // func for add new notes from folder\r\n  const addNoteButton = () => {\r\n    if (folderId !== 0) {\r\n      const newData = _.cloneDeep(notesList)\r\n      setNotesAction(arrPusher(newData, folderId))\r\n    }\r\n  }\r\n\r\n  // func for remove active element folder/note\r\n  const removeActiveElement = () => {\r\n    const newDataFolders = _.cloneDeep(foldersList)\r\n    const newDataNotes = _.cloneDeep(notesList)\r\n    if (noteId === 0) {\r\n      setFolderAction(arrRemoveFolder(newDataFolders, newDataNotes, folderId))\r\n      setFolderIdAction(0)\r\n    } else {\r\n      setNotesAction(arrRemoveNote(newDataNotes, noteId))\r\n      setNoteIdAction(0)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton aria-label='Close/Open folder list' onClick={changeDisplay}>\r\n        <ViewCompactOutlinedIcon fontSize='small'/>\r\n      </IconButton>\r\n      <IconButton aria-label='Delete current element' onClick={removeActiveElement}>\r\n        <DeleteOutlineOutlinedIcon fontSize='small' />\r\n      </IconButton>\r\n      <IconButton aria-label='Add note' onClick={addNoteButton}>\r\n        <NoteAddOutlinedIcon fontSize='small' />\r\n      </IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ButtonsBlock)\r\n\r\nButtonsBlock.propTypes = {\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  notesList: PropTypes.array.isRequired,\r\n  foldersList: PropTypes.array.isRequired,\r\n  setNotesAction: PropTypes.func.isRequired,\r\n  setFolderAction: PropTypes.func.isRequired,\r\n  setNoteIdAction: PropTypes.func.isRequired,\r\n  setFolderIdAction: PropTypes.func.isRequired,\r\n  folderListDisplay: PropTypes.string.isRequired,\r\n  setFolderListDisplay: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ClosingMenu from './closingMenu'\r\nimport ButtonsBlock from './buttonsBlock'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '30px',\r\n    backgroundColor: '#e1dee1',\r\n    borderTopLeftRadius: '5px',\r\n    borderTopRightRadius: '5px',\r\n    boxShadow: '0 0 5px white inset',\r\n    display: 'flex'\r\n  }\r\n}))\r\n\r\nexport default function TopMenu (props) {\r\n  const classes = useStyles()\r\n  const { folderListDisplay, setFolderListDisplay } = props\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ClosingMenu/>\r\n      <ButtonsBlock folderListDisplay={folderListDisplay} setFolderListDisplay={setFolderListDisplay} />\r\n    </div>\r\n  )\r\n}\r\n\r\nTopMenu.propTypes = {\r\n  folderListDisplay: PropTypes.string.isRequired,\r\n  setFolderListDisplay: PropTypes.func.isRequired\r\n}\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport LeftBlock from './components/folderBlock/Index'\r\nimport CenterBlock from './components/notesBlock/Index'\r\nimport NoteText from './components/note/index'\r\nimport TopMenu from './components/topMenu/index'\r\nimport { DragDropContext } from 'react-beautiful-dnd'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\nimport { changeNote } from './components/notesBlock/helper'\r\nimport { connect } from 'react-redux'\r\nimport { setNotes, setNoteId } from './reducersFolder/notesReducer'\r\nimport Hidden from '@material-ui/core/Hidden'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  topMenu: {\r\n    margin: '1px 1px 0px 1px',\r\n    display: 'flex'\r\n  },\r\n  main: {\r\n    display: 'flex',\r\n    height: '95vh'\r\n  },\r\n  left: {\r\n    flex: '0 25%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flex: '0 100%'\r\n    }\r\n  },\r\n  center: {\r\n    flex: '0 25%'\r\n  },\r\n  right: {\r\n    flex: '1 50%'\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { notesList, noteId } = store.notes\r\n  const { folderId } = store.folder\r\n  return {\r\n    notesList,\r\n    noteId,\r\n    folderId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNotesAction: notesList => dispatch(setNotes(notesList)),\r\n    setNoteIdAction: noteId => dispatch(setNoteId(noteId))\r\n  }\r\n}\r\n\r\nfunction App (props) {\r\n  const [folderListDisplay, setFolderListDisplay] = useState('block')\r\n  const { setNotesAction, notesList, setNoteIdAction } = props\r\n  const classes = useStyles()\r\n\r\n  // func for change folder id from note when DRAG ended\r\n  const handleOnDragEnd = (result) => {\r\n    console.log(result)\r\n    const { combine, draggableId } = result\r\n    if (combine) {\r\n      const newData = _.cloneDeep(notesList)\r\n      setNotesAction(changeNote('changeFolderId', newData, draggableId, true, combine.draggableId))\r\n      setNoteIdAction(0)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={handleOnDragEnd}>\r\n    <div className={classes.root}>\r\n      <Hidden smDown>\r\n        <div className={classes.topMenu}>\r\n          <TopMenu folderListDisplay={folderListDisplay} setFolderListDisplay={setFolderListDisplay}/>\r\n        </div>\r\n      </Hidden>\r\n      <div className={classes.main}>\r\n        <div className={classes.left} style={{ display: folderListDisplay }}><LeftBlock/></div>\r\n        <Hidden smDown>\r\n          <div className={classes.center}><CenterBlock/></div>\r\n          <div className={classes.right}><NoteText/></div>\r\n        </Hidden>\r\n      </div>\r\n    </div>\r\n    </DragDropContext>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App)\r\n\r\nApp.propTypes = {\r\n  setNotesAction: PropTypes.func.isRequired,\r\n  notesList: PropTypes.array.isRequired,\r\n  setNoteIdAction: PropTypes.func.isRequired,\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ])\r\n}\r\n","import 'web-vitals'\r\nconst reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    ('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import { combineReducers } from 'redux'\r\nimport { folderReducer } from './folderReducer'\r\nimport { notesReducer } from './notesReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  folder: folderReducer,\r\n  notes: notesReducer\r\n})\r\n","import { createStore } from 'redux'\r\nimport { rootReducer } from '../reducersFolder/index'\r\nimport { devToolsEnhancer } from 'redux-devtools-extension'\r\n\r\nexport const store = createStore(rootReducer, devToolsEnhancer())\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './storeFolder/store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\nreportWebVitals()\r\n"],"sourceRoot":""}