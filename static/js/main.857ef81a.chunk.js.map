{"version":3,"sources":["folderBlock/helper.js","reducersFolder/mainReducer.js","folderBlock/contextMenu.js","folderBlock/folderList.js","folderBlock/newFolderButton/Index.js","folderBlock/Index.js","App.js","reportWebVitals.js","reducersFolder/index.js","storeFolder/store.js","index.js"],"names":["arrPusher","arr","uniqid","require","push","id","name","localStorage","setItem","JSON","stringify","SET_FOLDER","SET_FOLDER_ID","SET_FOLDER_MENU_POSITION","initialState","foldersList","parse","getItem","folderId","folderContextMenu","mouseX","mouseY","setFolder","type","payload","setFolderId","setPosFolderMenu","connect","store","main","dispatch","setFolderAction","setFolderIdAction","setPosFolderMenuAction","props","newData","_","cloneDeep","handleClose","style","cursor","Menu","keepMounted","open","onClose","anchorReference","anchorPosition","top","left","undefined","MenuItem","onClick","newArr","filter","item","arrRemoveFolder","useStyles","makeStyles","theme","root","overflow","width","backgroundColor","palette","background","paper","rootInput","color","classes","handleDoubleClick","event","preventDefault","clientX","clientY","className","List","component","aria-label","map","ListItem","button","selected","index","onDoubleClick","ListItemText","primary","TextField","defaultValue","InputProps","disableUnderline","disabled","textTransform","fontWeight","Button","startIcon","display","flexWrap","margin","spacing","height","flexDirection","justifyContent","LeftBlock","Paper","variant","square","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","state","action","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"oQAEaA,EAAY,SAACC,GACxB,IAAMC,EAASC,EAAQ,IAMvB,OALAF,EAAIG,KAAK,CACPC,GAAIH,IACJI,KAAM,eAERC,aAAaC,QAAQ,aAAcC,KAAKC,UAAUT,IAC1CA,G,gBCTJU,EAAa,aACbC,EAAgB,gBAChBC,EAA2B,2BAE3BC,EAAe,CACnBC,YAAaN,KAAKO,MAAMT,aAAaU,QAAQ,gBAAkB,GAC/DC,SAAU,EACVC,kBAAmB,CACjBC,OAAQ,KACRC,OAAQ,OAoBL,SAASC,EAAWP,GACzB,MAAO,CACLQ,KAAM,aACNC,QAAST,GAIN,SAASU,EAAaP,GAC3B,MAAO,CACLK,KAAM,gBACNC,QAASN,GAIN,SAASQ,EAAkBP,GAChC,MAAO,CACLI,KAAM,2BACNC,QAASL,GCrCb,IAAML,EAAe,CACnBM,OAAQ,KACRC,OAAQ,MA6DKM,mBA1DS,SAAAC,GAAU,IAAD,EACsBA,EAAMC,KAC3D,MAAO,CACLd,YAH6B,EACvBA,YAGNG,SAJ6B,EACVA,SAInBC,kBAL6B,EACAA,sBAQN,SAACW,GAC1B,MAAO,CACLC,gBAAiB,SAAAhB,GAAW,OAAIe,EAASR,EAAUP,KACnDiB,kBAAmB,SAAAd,GAAQ,OAAIY,EAASL,EAAYP,KACpDe,uBAAwB,SAAAd,GAAiB,OAAIW,EAASJ,EAAiBP,QA6C5DQ,EAzCf,SAAsBO,GAAQ,IACpBD,EAAyGC,EAAzGD,uBAAwBd,EAAiFe,EAAjFf,kBAAmBY,EAA8DG,EAA9DH,gBAAiBhB,EAA6CmB,EAA7CnB,YAAaG,EAAgCgB,EAAhChB,SAAUc,EAAsBE,EAAtBF,kBACnFZ,EAAmBD,EAAnBC,OAAQC,EAAWF,EAAXE,OACVc,EAAUC,IAAEC,UAAUtB,GAEtBuB,EAAc,WAClBL,EAAuBnB,IAczB,OACE,qBAAKyB,MAAO,CAAEC,OAAQ,gBAAtB,SACE,eAACC,EAAA,EAAD,CACEC,aAAW,EACXC,KAAiB,OAAXtB,EACNuB,QAASN,EACTO,gBAAgB,iBAChBC,eACa,OAAXzB,GAA8B,OAAXD,EACf,CAAE2B,IAAK1B,EAAQ2B,KAAM5B,QACrB6B,EARR,UAWE,cAACC,EAAA,EAAD,CAAUC,QAxBQ,WACtBpB,EAAgB/B,EAAUmC,IAC1BG,KAsBI,wBACA,cAACY,EAAA,EAAD,CAAUC,QAASb,EAAnB,2BACA,cAACY,EAAA,EAAD,CAAUC,QArBW,WACzBpB,EFlC2B,SAAC9B,EAAKiB,GACnC,IAAMkC,EAAShB,IAAEiB,OAAOpD,GAAK,SAAUqD,GAAQ,OAAOA,EAAKjD,KAAOa,KAElE,OADAX,aAAaC,QAAQ,aAAcC,KAAKC,UAAU0C,IAC1CA,EE+BUG,CAAgBpB,EAASjB,IACzCc,EAAkB,GAClBM,KAkBI,mCCvDFkB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,OACVC,MAAO,OACPC,gBAAiBJ,EAAMK,QAAQC,WAAWC,OAE5CC,UAAW,CACT,kBAAmB,CACjBC,MAAO,cAqEExC,mBAhES,SAAAC,GAAU,IAAD,EACsBA,EAAMC,KAC3D,MAAO,CACLd,YAH6B,EACvBA,YAGNG,SAJ6B,EACVA,SAInBC,kBAL6B,EACAA,sBAQN,SAACW,GAC1B,MAAO,CACLC,gBAAiB,SAAAhB,GAAW,OAAIe,EAASR,EAAUP,KACnDiB,kBAAmB,SAAAd,GAAQ,OAAIY,EAASL,EAAYP,KACpDe,uBAAwB,SAAAd,GAAiB,OAAIW,EAASJ,EAAiBP,QAmD5DQ,EAhDf,SAA2BO,GACzB,IAAMkC,EAAUZ,IACRzC,EAAqEmB,EAArEnB,YAAaG,EAAwDgB,EAAxDhB,SAAUc,EAA8CE,EAA9CF,kBAAmBC,EAA2BC,EAA3BD,uBAC5C/B,EAASC,EAAQ,IAEjBkE,EAAoB,SAACC,GACzBA,EAAMC,iBACNtC,EAAuB,CACrBb,OAAQkD,EAAME,QAAU,EACxBnD,OAAQiD,EAAMG,QAAU,KAQ5B,OACE,qBAAKC,UAAWN,EAAQT,KAAxB,SACE,eAACgB,EAAA,EAAD,CAAMC,UAAU,MAAMC,aAAW,uBAAjC,UACG9D,EAAY+D,KAAI,SAACxB,GAAD,OACf,cAACyB,EAAA,EAAD,CAEEC,QAAM,EACNC,SAAU/D,IAAaoC,EAAKjD,GAC5B8C,QAAS,SAACmB,GAAD,OAZiBY,EAYqB5B,EAAKjD,QAX5D2B,EAAkBkD,GADQ,IAAQA,GAa1BC,cAAed,EALjB,SAOE,cAACe,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEZ,UAAWN,EAAQF,UACnBqB,aAAY,UAAKjC,EAAKhD,MACtBkF,WAAY,CACVC,kBAAkB,EAClBC,UAAU,QAbbxF,QAoBT,cAAC,EAAD,Y,0BCxEFsD,EAAYC,aAAW,iBAAO,CAElCE,KAAM,CACJgC,cAAe,OACfC,WAAY,OACZ/B,MAAO,YAuCIlC,mBAnCS,SAAAC,GAEtB,MAAO,CACLb,YAFsBa,EAAMC,KAAtBd,gBAMiB,SAACe,GAC1B,MAAO,CACLC,gBAAiB,SAAAhB,GAAW,OAAIe,EAASR,EAAUP,QA0BxCY,EAtBf,SAA2BO,GACzB,IAAMkC,EAAUZ,IACRzC,EAAiCmB,EAAjCnB,YAAagB,EAAoBG,EAApBH,gBACfI,EAAUC,IAAEC,UAAUtB,GAM5B,OACE,8BACE,cAAC8E,EAAA,EAAD,CACEnB,UAAWN,EAAQT,KACnBmC,UAAW,cAAC,IAAD,IACX3C,QAToB,WACxBpB,EAAgB/B,EAAUmC,KAKxB,6BCrCAqB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJoC,QAAS,OACTC,SAAU,OACV,QAAS,CACPC,OAAQvC,EAAMwC,QAAQ,GACtBrC,MAAOH,EAAMwC,QAAQ,IACrBC,OAAQzC,EAAMwC,QAAQ,IACtBH,QAAS,OACTK,cAAe,SACfC,eAAgB,sBAKP,SAASC,IACtB,IAAMlC,EAAUZ,IAEhB,OACE,qBAAKkB,UAAWN,EAAQT,KAAxB,SACE,eAAC4C,EAAA,EAAD,CAAOC,QAAQ,WAAWC,QAAM,EAAhC,UACE,cAAC,EAAD,IACA,cAAC,EAAD,SCjBOC,MARf,WACE,OACE,qBAAKhC,UAAU,MAAf,SACE,cAAC4B,EAAD,OCOSK,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACvC,aAAcC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACrDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,QCLDQ,EAAcC,0BAAgB,CACzCxF,KPSK,WAAqD,IAA/ByF,EAA8B,uDAAtBxG,EAAcyG,EAAQ,uCACzD,OAAQA,EAAOhG,MACb,KAAKZ,EACH,OAAO,2BAAK2G,GAAZ,IAAmBvG,YAAawG,EAAO/F,UAEzC,KAAKZ,EACH,OAAO,2BAAK0G,GAAZ,IAAmBpG,SAAUqG,EAAO/F,UAEtC,KAAKX,EACH,OAAO,2BAAKyG,GAAZ,IAAmBnG,kBAAmBoG,EAAO/F,UAE/C,QACE,OAAO8F,M,QQrBA1F,EAAQ4F,sBAAYJ,EAAaK,8BCI9CC,IAASC,OACP,cAAC,IAAD,CAAU/F,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFgG,SAASC,eAAe,SAG1BlB,M","file":"static/js/main.857ef81a.chunk.js","sourcesContent":["import _ from 'lodash'\r\n\r\nexport const arrPusher = (arr) => {\r\n  const uniqid = require('uniqid')\r\n  arr.push({\r\n    id: uniqid(),\r\n    name: 'New Folder'\r\n  })\r\n  localStorage.setItem('arrFolders', JSON.stringify(arr))\r\n  return (arr)\r\n}\r\n\r\nexport const arrRemoveFolder = (arr, folderId) => {\r\n  const newArr = _.filter(arr, function (item) { return item.id !== folderId })\r\n  localStorage.setItem('arrFolders', JSON.stringify(newArr))\r\n  return (newArr)\r\n}\r\n","const SET_FOLDER = 'SET_FOLDER'\r\nconst SET_FOLDER_ID = 'SET_FOLDER_ID'\r\nconst SET_FOLDER_MENU_POSITION = 'SET_FOLDER_MENU_POSITION'\r\n\r\nconst initialState = {\r\n  foldersList: JSON.parse(localStorage.getItem('arrFolders')) || [],\r\n  folderId: 0,\r\n  folderContextMenu: {\r\n    mouseX: null,\r\n    mouseY: null\r\n  }\r\n}\r\n\r\nexport function mainReducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_FOLDER:\r\n      return { ...state, foldersList: action.payload }\r\n\r\n    case SET_FOLDER_ID:\r\n      return { ...state, folderId: action.payload }\r\n\r\n    case SET_FOLDER_MENU_POSITION:\r\n      return { ...state, folderContextMenu: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport function setFolder (foldersList) {\r\n  return {\r\n    type: 'SET_FOLDER',\r\n    payload: foldersList\r\n  }\r\n}\r\n\r\nexport function setFolderId (folderId) {\r\n  return {\r\n    type: 'SET_FOLDER_ID',\r\n    payload: folderId\r\n  }\r\n}\r\n\r\nexport function setPosFolderMenu (folderContextMenu) {\r\n  return {\r\n    type: 'SET_FOLDER_MENU_POSITION',\r\n    payload: folderContextMenu\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport _ from 'lodash'\r\nimport { arrPusher, arrRemoveFolder } from './helper'\r\nimport { connect } from 'react-redux'\r\nimport { setFolder, setFolderId, setPosFolderMenu } from '../reducersFolder/mainReducer'\r\n\r\nconst initialState = {\r\n  mouseX: null,\r\n  mouseY: null\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  const { foldersList, folderId, folderContextMenu } = store.main\r\n  return {\r\n    foldersList,\r\n    folderId,\r\n    folderContextMenu\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFolderAction: foldersList => dispatch(setFolder(foldersList)),\r\n    setFolderIdAction: folderId => dispatch(setFolderId(folderId)),\r\n    setPosFolderMenuAction: folderContextMenu => dispatch(setPosFolderMenu(folderContextMenu))\r\n  }\r\n}\r\n\r\nfunction ContextMenu (props) {\r\n  const { setPosFolderMenuAction, folderContextMenu, setFolderAction, foldersList, folderId, setFolderIdAction } = props\r\n  const { mouseX, mouseY } = folderContextMenu\r\n  const newData = _.cloneDeep(foldersList)\r\n\r\n  const handleClose = () => {\r\n    setPosFolderMenuAction(initialState)\r\n  }\r\n\r\n  const addFolderButton = () => {\r\n    setFolderAction(arrPusher(newData))\r\n    handleClose()\r\n  }\r\n\r\n  const removeFolderButton = () => {\r\n    setFolderAction(arrRemoveFolder(newData, folderId))\r\n    setFolderIdAction(0)\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <div style={{ cursor: 'context-menu' }}>\r\n      <Menu\r\n        keepMounted\r\n        open={mouseY !== null}\r\n        onClose={handleClose}\r\n        anchorReference=\"anchorPosition\"\r\n        anchorPosition={\r\n          mouseY !== null && mouseX !== null\r\n            ? { top: mouseY, left: mouseX }\r\n            : undefined\r\n        }\r\n      >\r\n        <MenuItem onClick={addFolderButton}>Add folder</MenuItem>\r\n        <MenuItem onClick={handleClose}>Rename folder</MenuItem>\r\n        <MenuItem onClick={removeFolderButton}>Delete folder</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ContextMenu)\r\n\r\nContextMenu.propTypes = {\r\n  setFolderAction: PropTypes.func.isRequired,\r\n  foldersList: PropTypes.array.isRequired,\r\n  setPosFolderMenuAction: PropTypes.func.isRequired,\r\n  folderContextMenu: PropTypes.object.isRequired,\r\n  setFolderIdAction: PropTypes.func.isRequired,\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ])\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport ContextMenu from './contextMenu'\r\nimport { connect } from 'react-redux'\r\nimport { setFolder, setFolderId, setPosFolderMenu } from '../reducersFolder/mainReducer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    overflow: 'auto',\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  rootInput: {\r\n    '& .Mui-disabled': {\r\n      color: 'black'\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { foldersList, folderId, folderContextMenu } = store.main\r\n  return {\r\n    foldersList,\r\n    folderId,\r\n    folderContextMenu\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFolderAction: foldersList => dispatch(setFolder(foldersList)),\r\n    setFolderIdAction: folderId => dispatch(setFolderId(folderId)),\r\n    setPosFolderMenuAction: folderContextMenu => dispatch(setPosFolderMenu(folderContextMenu))\r\n  }\r\n}\r\nfunction SelectedListItem (props) {\r\n  const classes = useStyles()\r\n  const { foldersList, folderId, setFolderIdAction, setPosFolderMenuAction } = props\r\n  const uniqid = require('uniqid')\r\n\r\n  const handleDoubleClick = (event) => {\r\n    event.preventDefault()\r\n    setPosFolderMenuAction({\r\n      mouseX: event.clientX - 2,\r\n      mouseY: event.clientY - 4\r\n    })\r\n  }\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    setFolderIdAction(index)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n        {foldersList.map((item) => (\r\n          <ListItem\r\n            key={uniqid()}\r\n            button\r\n            selected={folderId === item.id}\r\n            onClick={(event) => handleListItemClick(event, item.id)}\r\n            onDoubleClick={handleDoubleClick}\r\n          >\r\n            <ListItemText\r\n              primary={\r\n                <TextField\r\n                  className={classes.rootInput}\r\n                  defaultValue={`${item.name}`}\r\n                  InputProps={{\r\n                    disableUnderline: true,\r\n                    disabled: true\r\n                  }}\r\n                />\r\n              }\r\n            />\r\n          </ListItem>\r\n        ))}\r\n        <ContextMenu/>\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SelectedListItem)\r\n\r\nSelectedListItem.propTypes = {\r\n  foldersList: PropTypes.array.isRequired,\r\n  setPosFolderMenuAction: PropTypes.func.isRequired,\r\n  folderContextMenu: PropTypes.object.isRequired,\r\n  setFolderIdAction: PropTypes.func.isRequired,\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ])\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport { connect } from 'react-redux'\r\nimport { setFolder } from '../../reducersFolder/mainReducer'\r\nimport { arrPusher } from '../helper'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n  root: {\r\n    textTransform: 'none',\r\n    fontWeight: 'bold',\r\n    width: '100%'\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { foldersList } = store.main\r\n  return {\r\n    foldersList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFolderAction: foldersList => dispatch(setFolder(foldersList))\r\n  }\r\n}\r\n\r\nfunction IconLabelButtons (props) {\r\n  const classes = useStyles()\r\n  const { foldersList, setFolderAction } = props\r\n  const newData = _.cloneDeep(foldersList)\r\n\r\n  const handleButtonClick = () => {\r\n    setFolderAction(arrPusher(newData))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        className={classes.root}\r\n        startIcon={<AddCircleOutlineIcon />}\r\n        onClick={handleButtonClick}\r\n      >\r\n        New Folder\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IconLabelButtons)\r\n\r\nIconLabelButtons.propTypes = {\r\n  foldersList: PropTypes.array.isRequired,\r\n  setFolderAction: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport SelectedListItem from './folderList'\r\nimport IconLabelButtons from './newFolderButton/Index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(25),\r\n      height: theme.spacing(95),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'space-between'\r\n    }\r\n  }\r\n}))\r\n\r\nexport default function LeftBlock () {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper variant=\"outlined\" square>\r\n        <SelectedListItem/>\r\n        <IconLabelButtons/>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport LeftBlock from './folderBlock/Index'\n\nfunction App () {\n  return (\n    <div className=\"App\">\n      <LeftBlock/>\n    </div>\n  )\n}\n\nexport default App\n","import 'web-vitals'\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    ('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { combineReducers } from 'redux'\r\nimport { mainReducer } from './mainReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  main: mainReducer\r\n})\r\n","import { createStore } from 'redux'\r\nimport { rootReducer } from '../reducersFolder/index'\r\nimport { devToolsEnhancer } from 'redux-devtools-extension'\r\n\r\nexport const store = createStore(rootReducer, devToolsEnhancer())\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from './storeFolder/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}