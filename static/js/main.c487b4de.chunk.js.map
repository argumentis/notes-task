{"version":3,"sources":["components/folderBlock/helper.js","reducersFolder/folderReducer.js","components/folderBlock/folderList/contextMenu.js","reducersFolder/notesReducer.js","components/folderBlock/folderList/folderItem.js","components/folderBlock/folderList/index.js","components/folderBlock/newFolderButton/Index.js","components/folderBlock/Index.js","components/notesBlock/helper.js","components/notesBlock/notesList/contextMenu.js","components/notesBlock/notesList/notesItem.js","components/notesBlock/notesList/index.js","components/notesBlock/Index.js","components/note/noteTime.js","components/note/noteTextArea.js","components/note/index.js","components/topMenu/closingMenu.js","components/topMenu/buttonsBlock.js","components/topMenu/index.js","App.js","reportWebVitals.js","reducersFolder/index.js","storeFolder/store.js","index.js"],"names":["arrPusher","arr","uniqid","require","push","id","name","disableInput","localStorage","setItem","JSON","stringify","arrRemoveFolder","arrFolders","arrNotes","folderId","newArr","_","filter","item","newArrNotes","changeFolder","type","status","value","map","SET_FOLDER","SET_FOLDER_ID","initialState","foldersList","parse","getItem","setFolder","payload","setFolderId","mouseX","mouseY","connect","store","folder","notesList","notes","dispatch","setFolderAction","setFolderIdAction","props","posContextMenu","setPosContextMenu","handleClose","style","cursor","Menu","keepMounted","open","onClose","anchorReference","anchorPosition","top","left","undefined","MenuItem","onClick","newData","cloneDeep","event","newDataFolders","newDataNotes","SET_NOTE","SET_NOTE_ID","noteId","setNotes","setNoteId","useStyles","makeStyles","root","height","padding","listItemStyle","rootInput","backgroundColor","color","setNoteIdAction","ref","classes","itemId","itemName","itemStatus","wrapperRef","useRef","useState","contextMenu","setContextMenu","useEffect","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","className","ListItem","button","onDoubleClick","preventDefault","clientX","clientY","selected","index","ListItemText","primary","TextField","defaultValue","onChange","InputProps","disableUnderline","disabled","autoFocus","theme","overflow","width","paddingTop","List","component","aria-label","textTransform","fontWeight","display","justifyContent","paddingLeft","buttonStyle","Button","startIcon","flexDirection","LeftBlock","Paper","variant","square","options","year","month","day","weekday","hour","minute","date","Date","toLocaleDateString","dateNote","toLocaleString","arrRemoveNote","changeNote","Id","noteValue","setNotesAction","flex","alignItems","itemDate","handleDoubleClick","handleOnChange","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","handleListItemClick","characters","updateCharacters","init","onDragEnd","result","destination","items","Array","from","splice","source","reorderedItem","droppableId","droppableProps","placeholder","CenterBlock","timeStyle","marginTop","NoteTime","itemTime","textAreaStyle","border","resize","outline","onBlur","currItem","borderRadius","margin","redButton","yellowButton","greenButton","ClosingMenu","marginLeft","boxShadow","folderListDisplay","setFolderListDisplay","IconButton","fontSize","borderTopLeftRadius","borderTopRightRadius","TopMenu","topMenu","main","center","right","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","state","action","createStore","devToolsEnhancer","ReactDOM","render","getElementById"],"mappings":"kQAEaA,EAAY,SAACC,GACxB,IAAMC,EAASC,EAAQ,IAOvB,OANAF,EAAIG,KAAK,CACPC,GAAIH,IACJI,KAAM,aACNC,cAAc,IAEhBC,aAAaC,QAAQ,aAAcC,KAAKC,UAAUV,IAC1CA,GAGGW,EAAkB,SAACC,EAAYC,EAAUC,GACpD,IAAMC,EAASC,IAAEC,OAAOL,GAAY,SAAUM,GAAQ,OAAOA,EAAKd,KAAOU,KACnEK,EAAcH,IAAEC,OAAOJ,GAAU,SAAUK,GAAQ,OAAOA,EAAKJ,WAAaA,KAGlF,OAFAP,aAAaC,QAAQ,aAAcC,KAAKC,UAAUK,IAClDR,aAAaC,QAAQ,WAAYC,KAAKC,UAAUS,IACxCJ,GAGGK,EAAe,SAACC,EAAMrB,EAAKc,EAAUQ,EAAQC,GACxD,IAAMR,EAASf,EAAIwB,KAAI,SAAUN,GAC/B,OAAIA,EAAKd,KAAOU,EAEZ,CACEV,GAAIc,EAAKd,GACTC,KAAe,iBAATgB,EAA0BE,EAAQL,EAAKb,KAC7CC,aAAcgB,GAIVJ,KAIZ,OADAX,aAAaC,QAAQ,aAAcC,KAAKC,UAAUK,IAC1CA,G,yBCpCJU,EAAa,aACbC,EAAgB,gBAEhBC,EAAe,CACnBC,YAAanB,KAAKoB,MAAMtB,aAAauB,QAAQ,gBAAkB,GAC/DhB,SAAU,GAgBL,SAASiB,EAAWH,GACzB,MAAO,CACLP,KAAM,aACNW,QAASJ,GAIN,SAASK,EAAanB,GAC3B,MAAO,CACLO,KAAM,gBACNW,QAASlB,GCtBb,IAAMa,EAAe,CACnBO,OAAQ,KACRC,OAAQ,MAqEKC,mBAlES,SAAAC,GAAU,IAAD,EACGA,EAAMC,OAExC,MAAO,CACLV,YAJ6B,EACvBA,YAINd,SAL6B,EACVA,SAKnByB,UAJoBF,EAAMG,MAApBD,cAQiB,SAACE,GAC1B,MAAO,CACLC,gBAAiB,SAAAd,GAAW,OAAIa,EAASV,EAAUH,KACnDe,kBAAmB,SAAA7B,GAAQ,OAAI2B,EAASR,EAAYnB,QAqDzCsB,EAjDf,SAAsBQ,GAAQ,IACpBF,EAA4GE,EAA5GF,gBAAiBd,EAA2FgB,EAA3FhB,YAAae,EAA8EC,EAA9ED,kBAAmB7B,EAA2D8B,EAA3D9B,SAAU+B,EAAiDD,EAAjDC,eAAgBC,EAAiCF,EAAjCE,kBAAmBP,EAAcK,EAAdL,UAC9FL,EAAmBW,EAAnBX,OAAQC,EAAWU,EAAXV,OAEVY,EAAc,WAClBD,EAAkBnB,IAuBpB,OACE,qBAAKqB,MAAO,CAAEC,OAAQ,gBAAtB,SACE,eAACC,EAAA,EAAD,CACEC,aAAW,EACXC,KAAiB,OAAXjB,EACNkB,QAASN,EACTO,gBAAgB,iBAChBC,eACa,OAAXpB,GAA8B,OAAXD,EACf,CAAEsB,IAAKrB,EAAQsB,KAAMvB,QACrBwB,EARR,UAWE,cAACC,EAAA,EAAD,CAAUC,QAjCQ,WACtB,IAAMC,EAAU7C,IAAE8C,UAAUlC,GAC5Bc,EAAgB3C,EAAU8D,IAC1Bd,KA8BI,wBACA,cAACY,EAAA,EAAD,CAAUC,QA5BW,SAACG,GAC1BhB,IACA,IAAMc,EAAU7C,IAAE8C,UAAUlC,GAC5Bc,EAAgBtB,EAAa,eAAgByC,EAAS/C,GAAU,KAyB5D,2BACA,cAAC6C,EAAA,EAAD,CAAUC,QAvBW,WACzB,IAAMI,EAAiBhD,IAAE8C,UAAUlC,GAC7BqC,EAAejD,IAAE8C,UAAUvB,GACjCG,EAAgB/B,EAAgBqD,EAAgBC,EAAcnD,IAC9D6B,EAAkB,GAClBI,KAkBI,mCC1EFmB,EAAW,WACXC,EAAc,cAEdxC,EAAe,CACnBY,UAAW9B,KAAKoB,MAAMtB,aAAauB,QAAQ,cAAgB,GAC3DsC,OAAQ,GAgBH,SAASC,EAAU9B,GACxB,MAAO,CACLlB,KAAM,WACNW,QAASO,GAIN,SAAS+B,EAAWF,GACzB,MAAO,CACL/C,KAAM,cACNW,QAASoC,GClBb,IAAMG,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJ,sBAAuB,CACrBC,OAAQ,OACRC,QAAS,uBAGbC,cAAe,CACbF,OAAQ,OACRC,QAAS,sBAEXE,UAAW,CACT,iBAAkB,CAChBC,gBAAiB,WAEnB,kBAAmB,CACjBC,MAAO,QACPD,gBAAiB,aAuBjBnD,EAAe,CACnBO,OAAQ,KACRC,OAAQ,MAoFKC,mBAxGS,SAAAC,GAAU,IAAD,EACGA,EAAMC,OAExC,MAAO,CACLV,YAJ6B,EACvBA,YAINd,SAL6B,EACVA,SAKnBsD,OAJiB/B,EAAMG,MAAjB4B,WAQiB,SAAC3B,GAC1B,MAAO,CACLC,gBAAiB,SAAAd,GAAW,OAAIa,EAASV,EAAUH,KACnDe,kBAAmB,SAAA7B,GAAQ,OAAI2B,EAASR,EAAYnB,KACpDkE,gBAAiB,SAAAZ,GAAM,OAAI3B,EAAS6B,EAAUF,QA0FnChC,EAjFf,SAAqBQ,EAAOmB,GAC1B,IAM0BkB,EANpBC,EAAUX,IACR3C,EAAqHgB,EAArHhB,YAAad,EAAwG8B,EAAxG9B,SAAU6B,EAA8FC,EAA9FD,kBAAmBD,EAA2EE,EAA3EF,gBAAiByC,EAA0DvC,EAA1DuC,OAAQC,EAAkDxC,EAAlDwC,SAAUC,EAAwCzC,EAAxCyC,WAAYL,EAA4BpC,EAA5BoC,gBAAiBZ,EAAWxB,EAAXwB,OAC5GnE,EAASC,EAAQ,IACjBoF,EAAaC,iBAAO,MAJO,EAKKC,mBAAS7D,GALd,mBAK1B8D,EAL0B,KAKbC,EALa,KAgDjC,OAJmB,IAAfL,IArCsBJ,EAsCRK,EArChBK,qBAAU,WACR,SAASC,EAAoB7B,GAC3B,GAAIkB,EAAIY,UAAYZ,EAAIY,QAAQC,SAAS/B,EAAMgC,QAAS,CACtD,IAAMlC,EAAU7C,IAAE8C,UAAUlC,GAC5Bc,EAAgBtB,EAAa,eAAgByC,EAAS/C,GAAU,EAAMsE,KAI1E,OADAY,SAASC,iBAAiB,YAAaL,GAChC,WACLI,SAASE,oBAAoB,YAAaN,MAE3C,CAACX,KA8BJ,sBAAKA,IAAKK,EAAYa,UAAWjB,EAAQT,KAAzC,UACE,cAAC2B,EAAA,EAAD,CAEEC,QAAM,EACNC,cAtBoB,SAACvC,GACzBA,EAAMwC,iBACNb,EAAe,CACbxD,OAAQ6B,EAAMyC,QAAU,EACxBrE,OAAQ4B,EAAM0C,QAAU,KAmBtBC,SAAU5F,IAAaqE,EACvBvB,QAAS,SAACG,GAAD,OAjCqB4C,EAiCiBxB,EAhC/CrE,IAAaqE,GACfxC,EAAkBgE,QAEL,IAAXvC,GACFY,EAAgB,IALQ,IAAQ2B,GA4BhC,SAOE,cAACC,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACE1G,GAAI+E,EACJgB,UAAWjB,EAAQL,UACnBkC,aAAc3B,EACd4B,SAxBW,SAACjD,GACtB,IAAMF,EAAU7C,IAAE8C,UAAUlC,GAC5Bc,EAAgBtB,EAAa,eAAgByC,EAAS/C,EAAUuE,EAAYtB,EAAMgC,OAAOxE,SAuB/E0F,WAAY,CACVC,kBAAkB,EAClBC,SAAU9B,EACV+B,WAAW,QAhBdnH,KAsBP,cAAC,EAAD,CACE4C,eAAgB4C,EAChB3C,kBAAmB4C,UC9HrBnB,EAAYC,aAAW,SAAC6C,GAAD,MAAY,CACvC5C,KAAM,CACJ6C,SAAU,OACVC,MAAO,OACPzC,gBAAiB,OACjB0C,WAAY,WAgCDpF,mBA5BS,SAAAC,GAEtB,MAAO,CACLT,YAFsBS,EAAMC,OAAtBV,eA2BKQ,EArBf,SAA2BQ,GACzB,IAAMsC,EAAUX,IACR3C,EAAgBgB,EAAhBhB,YACF3B,EAASC,EAAQ,IAEvB,OACE,qBAAKiG,UAAWjB,EAAQT,KAAxB,SACE,cAACgD,EAAA,EAAD,CAAMC,UAAU,MAAMC,aAAW,uBAAjC,SACK/F,EAAYJ,KAAI,SAACN,EAAMyF,GAAP,OACf,cAAC,EAAD,CAEExB,OAAQjE,EAAKd,GACbgF,SAAUlE,EAAKb,KACfgF,WAAYnE,EAAKZ,cAHZL,e,0BCvBbsE,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJmD,cAAe,OACfC,WAAY,OACZN,MAAO,OACPO,QAAS,SACTC,eAAgB,aAChBC,YAAa,YAuCF5F,mBAnCS,SAAAC,GAEtB,MAAO,CACLT,YAFsBS,EAAMC,OAAtBV,gBAMiB,SAACa,GAC1B,MAAO,CACLC,gBAAiB,SAAAd,GAAW,OAAIa,EAASV,EAAUH,QA0BxCQ,EAtBf,SAA2BQ,GACzB,IAAMsC,EAAUX,IACR3C,EAAiCgB,EAAjChB,YAAac,EAAoBE,EAApBF,gBACfmB,EAAU7C,IAAE8C,UAAUlC,GAM5B,OACE,qBAAKuE,UAAWjB,EAAQ+C,YAAxB,SACE,cAACC,EAAA,EAAD,CACE/B,UAAWjB,EAAQT,KACnB0D,UAAW,cAAC,IAAD,IACXvE,QAToB,WACxBlB,EAAgB3C,EAAU8D,KAKxB,6BCvCAU,EAAYC,aAAW,SAAC6C,GAAD,MAAY,CACvC5C,KAAM,CACJqD,QAAS,OACTM,cAAe,SACf,QAAS,CACPN,QAAS,OACTpD,OAAQ,OACR0D,cAAe,SACfL,eAAgB,gBAChBjD,gBAAiB,gBAKR,SAASuD,IACtB,IAAMnD,EAAUX,IAEhB,OACE,qBAAK4B,UAAWjB,EAAQT,KAAxB,SACE,eAAC6D,EAAA,EAAD,CAAOC,QAAQ,WAAWC,QAAM,EAAhC,UACE,cAAC,EAAD,IACA,cAAC,EAAD,SCzBR,IAAMC,EAAU,CACdC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,QAAS,OACTC,KAAM,UACNC,OAAQ,WAGGhJ,EAAY,SAACC,EAAKc,GAC7B,IAAMb,EAASC,EAAQ,IACjB8I,EAAO,IAAIC,KAUjB,OATAjJ,EAAIG,KAAK,CACPC,GAAIH,IACJa,SAAUA,EACVT,KAAM,WACNC,cAAc,EACd0I,KAAMA,EAAKE,qBACXC,SAAUH,EAAKI,eAAe,QAASX,KAEzClI,aAAaC,QAAQ,WAAYC,KAAKC,UAAUV,IACxCA,GAGGqJ,EAAgB,SAACrJ,EAAKoE,GACjC,IAAMrD,EAASC,IAAEC,OAAOjB,GAAK,SAAUkB,GAAQ,OAAOA,EAAKd,KAAOgE,KAElE,OADA7D,aAAaC,QAAQ,WAAYC,KAAKC,UAAUK,IACxCA,GAGGuI,EAAa,SAACjI,EAAMrB,EAAKuJ,EAAIjI,EAAQC,GAChD,IAAMR,EAASf,EAAIwB,KAAI,SAAUN,GAC/B,OAAIA,EAAKd,KAAOmJ,EAEZ,CACEnJ,GAAIc,EAAKd,GACTU,SAAUI,EAAKJ,SACfT,KAAe,eAATgB,EAAwBE,EAAQL,EAAKb,KAC3CC,aAAcgB,EACdkI,UAAoB,oBAATnI,EAA6BE,EAAQL,EAAKsI,WAAa,GAClER,KAAM9H,EAAK8H,KACXG,SAAUjI,EAAKiI,UAIXjI,KAIZ,OADAX,aAAaC,QAAQ,WAAYC,KAAKC,UAAUK,IACxCA,GC1CJY,EAAe,CACnBO,OAAQ,KACRC,OAAQ,MAoEKC,mBAjES,SAAAC,GAAU,IAAD,EACDA,EAAMG,MAEpC,MAAO,CACLD,UAJ6B,EACvBA,UAIN6B,OAL6B,EACZA,OAKjBtD,SAJmBuB,EAAMC,OAAnBxB,aAQiB,SAAC2B,GAC1B,MAAO,CACLgH,eAAgB,SAAAlH,GAAS,OAAIE,EAAS4B,EAAS9B,KAC/CyC,gBAAiB,SAAAZ,GAAM,OAAI3B,EAAS6B,EAAUF,QAoDnChC,EAhDf,SAAsBQ,GAAQ,IACpB6G,EAAoG7G,EAApG6G,eAAgBlH,EAAoFK,EAApFL,UAAWyC,EAAyEpC,EAAzEoC,gBAAiBZ,EAAwDxB,EAAxDwB,OAAQvB,EAAgDD,EAAhDC,eAAgBC,EAAgCF,EAAhCE,kBAAmBhC,EAAa8B,EAAb9B,SACvFoB,EAAmBW,EAAnBX,OAAQC,EAAWU,EAAXV,OAEVY,EAAc,WAClBD,EAAkBnB,IAsBpB,OACE,qBAAKqB,MAAO,CAAEC,OAAQ,gBAAtB,SACE,eAACC,EAAA,EAAD,CACEC,aAAW,EACXC,KAAiB,OAAXjB,EACNkB,QAASN,EACTO,gBAAgB,iBAChBC,eACa,OAAXpB,GAA8B,OAAXD,EACf,CAAEsB,IAAKrB,EAAQsB,KAAMvB,QACrBwB,EARR,UAWE,cAACC,EAAA,EAAD,CAAUC,QAhCM,WACpB,IAAMC,EAAU7C,IAAE8C,UAAUvB,GAC5BkH,EAAe1J,EAAU8D,EAAS/C,IAClCiC,KA6BI,sBACA,cAACY,EAAA,EAAD,CAAUC,QA3BS,SAACG,GACxBhB,IACA,IAAMc,EAAU7C,IAAE8C,UAAUvB,GAC5BkH,EAAeH,EAAW,eAAgBzF,EAASO,GAAQ,KAwBvD,yBACA,cAACT,EAAA,EAAD,CAAUC,QAtBS,WACvB,IAAMC,EAAU7C,IAAE8C,UAAUvB,GAC5BkH,EAAeJ,EAAcxF,EAASO,IACtCY,EAAgB,GAChBjC,KAkBI,iC,QC5DFwB,GAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJ,kBAAmB,CACjBK,gBAAiB,WAEnB,0BAA2B,CACzB4E,KAAM,KAER,sBAAuB,CACrB5B,QAAS,OACTM,cAAe,SACfuB,WAAY,aACZ3B,YAAa,SAGjBnD,UAAW,CACT,iBAAkB,CAChBC,gBAAiB,WAEnB,kBAAmB,CACjBC,MAAO,QACPD,gBAAiB,aAoBjBnD,GAAe,CACnBO,OAAQ,KACRC,OAAQ,MA0FKC,oBA3GS,SAAAC,GAAU,IAAD,EACDA,EAAMG,MACpC,MAAO,CACLD,UAH6B,EACvBA,UAGN6B,OAJ6B,EACZA,WAOM,SAAC3B,GAC1B,MAAO,CACLgH,eAAgB,SAAAlH,GAAS,OAAIE,EAAS4B,EAAS9B,KAC/CyC,gBAAiB,SAAAZ,GAAM,OAAI3B,EAAS6B,EAAUF,QAgGnChC,EAvFf,SAAoBQ,EAAOmB,GACzB,IAK0BkB,EALpBC,EAAUX,KACRhC,EAAsGK,EAAtGL,UAAW6B,EAA2FxB,EAA3FwB,OAAQY,EAAmFpC,EAAnFoC,gBAAiByE,EAAkE7G,EAAlE6G,eAAgBtE,EAAkDvC,EAAlDuC,OAAQC,EAA0CxC,EAA1CwC,SAAUC,EAAgCzC,EAAhCyC,WAAYuE,EAAoBhH,EAApBgH,SAAUjD,EAAU/D,EAAV+D,MAC9FrB,EAAaC,iBAAO,MAHM,EAIMC,mBAAS7D,IAJf,mBAIzB8D,EAJyB,KAIZC,EAJY,KA2B1BmE,EAAoB,SAAC9F,GACzBA,EAAMwC,iBACNb,EAAe,CACbxD,OAAQ6B,EAAMyC,QAAU,EACxBrE,OAAQ4B,EAAM0C,QAAU,KAItBqD,EAAiB,SAAC/F,GACtB,IAAMF,EAAU7C,IAAE8C,UAAUvB,GAC5BkH,EAAeH,EAAW,aAAczF,EAASO,EAAQiB,EAAYtB,EAAMgC,OAAOxE,SAOpF,OAJmB,IAAf8D,IAlCsBJ,EAmCRK,EAlChBK,qBAAU,WACR,SAASC,EAAoB7B,GAC3B,GAAIkB,EAAIY,UAAYZ,EAAIY,QAAQC,SAAS/B,EAAMgC,QAAS,CACtD,IAAMlC,EAAU7C,IAAE8C,UAAUvB,GAC5BkH,EAAeH,EAAW,aAAczF,EAASO,GAAQ,EAAMgB,KAInE,OADAY,SAASC,iBAAiB,YAAaL,GAChC,WACLI,SAASE,oBAAoB,YAAaN,MAE3C,CAACX,KA2BJ,sBAAKA,IAAKK,EAAYa,UAAWjB,EAAQT,KAAzC,UACE,cAAC,IAAD,CAAWkC,MAAOA,EAAOoD,YAAa5E,EAAqB9D,KAAK,OAAhE,SACG,SAAC2I,EAAUC,GAAX,OACC,yDACEhF,IAAK+E,EAASE,UACVF,EAASG,gBACTH,EAASI,iBAHf,aAKE,eAAChE,EAAA,EAAD,CACEC,QAAM,EACNC,cAAeuD,EACfnD,SAAUtC,IAAWe,EACrBvB,QAAS,SAACG,GAAD,OApCO,SAACA,EAAO4C,GAC9BvC,IAAWe,GACbH,EAAgB2B,GAkCY0D,CAAoBtG,EAAOoB,IAJjD,UAME,cAACyB,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACE1G,GAAI+E,EACJgB,UAAWjB,EAAQL,UACnBtD,MAAO6D,EACP4B,SAAU8C,EACV7C,WAAY,CACVC,kBAAkB,EAClBC,SAAU9B,EACV+B,WAAW,OAKnB,8BAAMwC,YA5BqCzE,GAiCnD,cAAC,EAAD,CACEtC,eAAgB4C,EAChB3C,kBAAmB4C,UCnIrBnB,GAAYC,aAAW,SAAC6C,GAAD,MAAY,CACvC5C,KAAM,CACJ6C,SAAU,OACVxC,gBAAiB,OACjBJ,OAAQ,OACR,QAAS,CACPC,QAAS,MACT4C,MAAO,aAgEEnF,oBA3DS,SAAAC,GAGtB,MAAO,CACLE,UAHoBF,EAAMG,MAApBD,UAINzB,SAHmBuB,EAAMC,OAAnBxB,YAyDKsB,EAlDf,SAA2BQ,GACzB,IAAMsC,EAAUX,KACRhC,EAAwBK,EAAxBL,UAAWzB,EAAa8B,EAAb9B,SACbb,EAASC,EAAQ,IAHS,EAIOsF,mBAAS,IAJhB,mBAIzB8E,EAJyB,KAIbC,EAJa,KAmBhC,OAdA5E,qBAAU,WACR,IAAM6E,EAAOxJ,IAAEC,OAAOsB,GAAW,SAAUrB,GAAQ,OAAOA,EAAKJ,WAAaA,KAC5EyJ,EAAiBC,KAChB,CAAC1J,EAAUyB,IAYZ,qBAAK4D,UAAWjB,EAAQT,KAAxB,SACE,cAAC,IAAD,CAAiBgG,UAXrB,SAA0BC,GACxB,GAAKA,EAAOC,YAAZ,CACA,IAAMC,EAAQC,MAAMC,KAAKR,GAFO,EAGRM,EAAMG,OAAOL,EAAOM,OAAOrE,MAAO,GAAnDsE,EAHyB,oBAMhC,OAFAL,EAAMG,OAAOL,EAAOC,YAAYhE,MAAO,EAAGsE,GAEnCV,EAAiBK,KAKtB,SACE,cAAC,IAAD,CAAWM,YAAY,YAAvB,SACG,SAAClB,GAAD,OACC,eAACvC,EAAA,EAAD,yBACEtB,UAAU,aACVuB,UAAU,MACVC,aAAW,wBACPqC,EAASmB,gBAJf,IAKElG,IAAK+E,EAASE,SALhB,UAOGI,EAAW9I,KAAI,SAACN,EAAMyF,GAAP,OACd,cAAC,GAAD,CAEEA,MAAOA,EACPxB,OAAQjE,EAAKd,GACbgF,SAAUlE,EAAKb,KACfgF,WAAYnE,EAAKZ,aACjBsJ,SAAU1I,EAAK8H,MALV/I,QAQR+J,EAASoB,0BClElB7G,GAAYC,aAAW,SAAC6C,GAAD,MAAY,CACvC5C,KAAM,CACJqD,QAAS,OACTM,cAAe,SACf,QAAS,CACPN,QAAS,OACTpD,OAAQ,OACR0D,cAAe,SACfL,eAAgB,gBAChBjD,gBAAiB,gBAKR,SAASuG,KACtB,IAAMnG,EAAUX,KAEhB,OACE,qBAAK4B,UAAWjB,EAAQT,KAAxB,SACE,cAAC6D,EAAA,EAAD,CAAOC,QAAQ,WAAWC,QAAM,EAAhC,SACE,cAAC,GAAD,CAAkBxF,MAAO,SCrBjC,IAAMuB,GAAYC,aAAW,iBAAO,CAClC8G,UAAW,CACTxD,QAAS,OACTC,eAAgB,SAChBhD,MAAO,UACPwG,UAAW,YAIA,SAASC,GAAU5I,GAChC,IAAMsC,EAAUX,KACRkH,EAAa7I,EAAb6I,SAER,OACE,qBAAKtF,UAAWjB,EAAQoG,UAAxB,SACMG,ICXV,IAAMlH,GAAYC,aAAW,SAAC6C,GAAD,MAAY,CACvCqE,cAAe,CACbnE,MAAO,MACPoE,OAAQ,MACRjH,OAAQ,OACRkH,OAAQ,OACRC,QAAS,OACT/G,gBAAiB,UACjByG,UAAW,YAwCAnJ,oBApCS,SAAAC,GAAU,IAAD,EACDA,EAAMG,MAEpC,MAAO,CACL4B,OAJ6B,EACvBA,OAIN7B,UAL6B,EACfA,cAQS,SAACE,GAC1B,MAAO,CACLuC,gBAAiB,SAAAZ,GAAM,OAAI3B,EAAS6B,EAAUF,KAC9CqF,eAAgB,SAAAlH,GAAS,OAAIE,EAAS4B,EAAS9B,QAwBpCH,EApBf,SAAuBQ,GACrB,IAAMsC,EAAUX,KACRH,EAAoDxB,EAApDwB,OAAQ7B,EAA4CK,EAA5CL,UAAWkH,EAAiC7G,EAAjC6G,eAAgB1C,EAAiBnE,EAAjBmE,aAO3C,OACE,8BACI,0BACIZ,UAAWjB,EAAQwG,cACnB3E,aAAcA,EACd+E,OAVc,SAAC/H,GACvB,IAAMF,EAAU7C,IAAE8C,UAAUvB,GAC5BkH,EAAeH,EAAW,kBAAmBzF,EAASO,GAAQ,EAAML,EAAMgC,OAAOxE,gBCjC/EgD,GAAYC,aAAW,SAAC6C,GAAD,MAAY,CACvC5C,KAAM,CACJqD,QAAS,OACTM,cAAe,SACf,QAAS,CACPN,QAAS,OACTpD,OAAQ,OACR0D,cAAe,SACftD,gBAAiB,gBAkCR1C,oBA7BS,SAAAC,GAAU,IAAD,EACDA,EAAMG,MAEpC,MAAO,CACL4B,OAJ6B,EACvBA,OAIN7B,UAL6B,EACfA,aA4BHH,EApBf,SAAmBQ,GACjB,IAAMsC,EAAUX,KACRH,EAAsBxB,EAAtBwB,OAAQ7B,EAAcK,EAAdL,UACVtC,EAASC,EAAQ,IACjB6L,EAAW/K,IAAEC,OAAOsB,GAAW,SAAUrB,GAAQ,OAAOA,EAAKd,KAAOgE,KAE1E,OACE,qBAAK+B,UAAWjB,EAAQT,KAAxB,SACE,cAAC6D,EAAA,EAAD,CAAOC,QAAQ,WAAWC,QAAM,EAAhC,SACGuD,EAASvK,KAAI,SAACN,GAAD,OACZ,gCACE,cAACsK,GAAD,CAAUC,SAAUvK,EAAKiI,WACzB,cAAC,GAAD,CAAcpC,aAAc7F,EAAKsI,cAFzBvJ,eCtCdsE,GAAYC,aAAW,SAAC6C,GAAD,MAAY,CACvC5C,KAAM,CACJqD,QAAS,OACT,QAAS,CACPpD,OAAQ,OACR6C,MAAO,OACPyE,aAAc,OACdC,OAAQ,oBAGZC,UAAW,CACTpH,gBAAiB,WAEnBqH,aAAc,CACZrH,gBAAiB,WAEnBsH,YAAa,CACXtH,gBAAiB,eAIN,SAASuH,KACtB,IAAMnH,EAAUX,KAEhB,OACE,sBAAK4B,UAAWjB,EAAQT,KAAxB,UACI,qBAAK0B,UAAWjB,EAAQgH,YACxB,qBAAK/F,UAAWjB,EAAQiH,eACxB,qBAAKhG,UAAWjB,EAAQkH,iB,0ECjB1B7H,GAAYC,aAAW,SAAC6C,GAAD,MAAY,CACvC5C,KAAM,CACJqD,QAAS,OACTwE,WAAY,MACZ,QAAS,CACPA,WAAY,OACZf,UAAW,MACX5G,QAAS,MACT4C,MAAO,OACP7C,OAAQ,OACRsH,aAAc,MACdlH,gBAAiB,UACjByH,UAAW,0CAwEFnK,oBAnES,SAAAC,GAAU,IAAD,EACDA,EAAMG,MAA5B4B,EADuB,EACvBA,OAAQ7B,EADe,EACfA,UADe,EAEGF,EAAMC,OAExC,MAAO,CACL8B,SACAtD,SAN6B,EAEvBA,SAKNyB,YACAX,YAR6B,EAEbA,gBAUO,SAACa,GAC1B,MAAO,CACLgH,eAAgB,SAAAlH,GAAS,OAAIE,EAAS4B,EAAS9B,KAC/CyC,gBAAiB,SAAAZ,GAAM,OAAI3B,EAAS6B,EAAUF,KAC9C1B,gBAAiB,SAAAd,GAAW,OAAIa,EAASV,EAAUH,KACnDe,kBAAmB,SAAA7B,GAAQ,OAAI2B,EAASR,EAAYnB,QAkDzCsB,EA9Cf,SAAuBQ,GACrB,IAAMsC,EAAUX,KACRiI,EAA2J5J,EAA3J4J,kBAAmBC,EAAwI7J,EAAxI6J,qBAAsBlK,EAAkHK,EAAlHL,UAAWzB,EAAuG8B,EAAvG9B,SAAU2I,EAA6F7G,EAA7F6G,eAAgBzE,EAA6EpC,EAA7EoC,gBAAiBZ,EAA4DxB,EAA5DwB,OAAQxC,EAAoDgB,EAApDhB,YAAac,EAAuCE,EAAvCF,gBAAiBC,EAAsBC,EAAtBD,kBA6B7I,OACE,sBAAKwD,UAAWjB,EAAQT,KAAxB,UACE,cAACiI,GAAA,EAAD,CAAY/E,aAAW,yBAAyB/D,QA7B9B,WAElB6I,EADwB,UAAtBD,EACmB,OAEA,UAyBrB,SACE,cAAC,KAAD,CAAyBG,SAAS,YAEpC,cAACD,GAAA,EAAD,CAAY/E,aAAW,yBAAyB/D,QAjBxB,WAC1B,IAAMI,EAAiBhD,IAAE8C,UAAUlC,GAC7BqC,EAAejD,IAAE8C,UAAUvB,GAClB,IAAX6B,GACF1B,EAAgB/B,EAAgBqD,EAAgBC,EAAcnD,IAC9D6B,EAAkB,KAElB8G,EAAeJ,EAAcpF,EAAcG,IAC3CY,EAAgB,KAShB,SACE,cAAC,KAAD,CAA2B2H,SAAS,YAEtC,cAACD,GAAA,EAAD,CAAY/E,aAAW,WAAW/D,QA3BhB,WACpB,GAAiB,IAAb9C,EAAgB,CAClB,IAAM+C,EAAU7C,IAAE8C,UAAUvB,GAC5BkH,EAAe1J,EAAU8D,EAAS/C,MAwBlC,SACE,cAAC,KAAD,CAAqB6L,SAAS,kBCtFhCpI,GAAYC,aAAW,SAAC6C,GAAD,MAAY,CACvC5C,KAAM,CACJ8C,MAAO,OACP7C,OAAQ,OACRI,gBAAiB,UACjB8H,oBAAqB,MACrBC,qBAAsB,MACtBN,UAAW,sBACXzE,QAAS,YAIE,SAASgF,GAASlK,GAC/B,IAAMsC,EAAUX,KACRiI,EAA4C5J,EAA5C4J,kBAAmBC,EAAyB7J,EAAzB6J,qBAE3B,OACE,sBAAKtG,UAAWjB,EAAQT,KAAxB,UACE,cAAC4H,GAAD,IACA,cAAC,GAAD,CAAcG,kBAAmBA,EAAmBC,qBAAsBA,OClBhF,IAAMlI,GAAYC,aAAW,SAAC6C,GAAD,MAAY,CACvC5C,KAAM,CACJqD,QAAS,OACTM,cAAe,UAEjB2E,QAAS,CACPd,OAAQ,kBACRnE,QAAS,QAEXkF,KAAM,CACJlF,QAAS,OACTpD,OAAQ,QAEVuI,OAAQ,CACNvD,KAAM,SAERwD,MAAO,CACLxD,KAAM,aAqBKyD,OAjBf,WAAiB,IAAD,EACoC3H,mBAAS,SAD7C,mBACPgH,EADO,KACYC,EADZ,KAERvH,EAAUX,KAChB,OACE,sBAAK4B,UAAWjB,EAAQT,KAAxB,UACE,qBAAK0B,UAAWjB,EAAQ6H,QAAxB,SACE,cAACD,GAAD,CAASN,kBAAmBA,EAAmBC,qBAAsBA,MAEvE,sBAAKtG,UAAWjB,EAAQ8H,KAAxB,UACE,qBAAKhK,MAAO,CAAE0G,KAAM,QAAS5B,QAAS0E,GAAtC,SAA2D,cAACnE,EAAD,MAC3D,qBAAKlC,UAAWjB,EAAQ+H,OAAxB,SAAgC,cAAC5B,GAAD,MAChC,qBAAKlF,UAAWjB,EAAQgI,MAAxB,SAA+B,cAAC,GAAD,aC1BxBE,I,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACvC,aAAcC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACrDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,SCJDQ,GAAcC,2BAAgB,CACzCxL,OpBGK,WAAuD,IAA/ByL,EAA8B,uDAAtBpM,EAAcqM,EAAQ,uCAC3D,OAAQA,EAAO3M,MACb,KAAKI,EACH,OAAO,2BAAKsM,GAAZ,IAAmBnM,YAAaoM,EAAOhM,UAEzC,KAAKN,EACH,OAAO,2BAAKqM,GAAZ,IAAmBjN,SAAUkN,EAAOhM,UAEtC,QACE,OAAO+L,IoBXXvL,MlBEK,WAAsD,IAA/BuL,EAA8B,uDAAtBpM,EAAcqM,EAAQ,uCAC1D,OAAQA,EAAO3M,MACb,KAAK6C,EACH,OAAO,2BAAK6J,GAAZ,IAAmBxL,UAAWyL,EAAOhM,UAEvC,KAAKmC,EACH,OAAO,2BAAK4J,GAAZ,IAAmB3J,OAAQ4J,EAAOhM,UAEpC,QACE,OAAO+L,M,SmBbA1L,GAAQ4L,uBAAYJ,GAAaK,+BCI9CC,IAASC,OACP,cAAC,IAAD,CAAU/L,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEF2D,SAASqI,eAAe,SAG1BjB,O","file":"static/js/main.c487b4de.chunk.js","sourcesContent":["import _ from 'lodash'\r\n// func for add new folders\r\nexport const arrPusher = (arr) => {\r\n  const uniqid = require('uniqid')\r\n  arr.push({\r\n    id: uniqid(),\r\n    name: 'New Folder',\r\n    disableInput: true\r\n  })\r\n  localStorage.setItem('arrFolders', JSON.stringify(arr))\r\n  return (arr)\r\n}\r\n// func for remove folder\r\nexport const arrRemoveFolder = (arrFolders, arrNotes, folderId) => {\r\n  const newArr = _.filter(arrFolders, function (item) { return item.id !== folderId })\r\n  const newArrNotes = _.filter(arrNotes, function (item) { return item.folderId !== folderId })\r\n  localStorage.setItem('arrFolders', JSON.stringify(newArr))\r\n  localStorage.setItem('arrNotes', JSON.stringify(newArrNotes))\r\n  return (newArr)\r\n}\r\n// func for change folder\r\nexport const changeFolder = (type, arr, folderId, status, value) => {\r\n  const newArr = arr.map(function (item) {\r\n    if (item.id === folderId) {\r\n      return (\r\n        {\r\n          id: item.id,\r\n          name: type === 'renameFolder' ? value : item.name,\r\n          disableInput: status\r\n        }\r\n      )\r\n    } else {\r\n      return (item)\r\n    }\r\n  })\r\n  localStorage.setItem('arrFolders', JSON.stringify(newArr))\r\n  return (newArr)\r\n}\r\n","const SET_FOLDER = 'SET_FOLDER'\r\nconst SET_FOLDER_ID = 'SET_FOLDER_ID'\r\n\r\nconst initialState = {\r\n  foldersList: JSON.parse(localStorage.getItem('arrFolders')) || [],\r\n  folderId: 0\r\n}\r\n\r\nexport function folderReducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_FOLDER:\r\n      return { ...state, foldersList: action.payload }\r\n\r\n    case SET_FOLDER_ID:\r\n      return { ...state, folderId: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport function setFolder (foldersList) {\r\n  return {\r\n    type: 'SET_FOLDER',\r\n    payload: foldersList\r\n  }\r\n}\r\n\r\nexport function setFolderId (folderId) {\r\n  return {\r\n    type: 'SET_FOLDER_ID',\r\n    payload: folderId\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport _ from 'lodash'\r\nimport { arrPusher, arrRemoveFolder, changeFolder } from '../helper'\r\nimport { connect } from 'react-redux'\r\nimport { setFolder, setFolderId } from '../../../reducersFolder/folderReducer'\r\n\r\nconst initialState = {\r\n  mouseX: null,\r\n  mouseY: null\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  const { foldersList, folderId } = store.folder\r\n  const { notesList } = store.notes\r\n  return {\r\n    foldersList,\r\n    folderId,\r\n    notesList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFolderAction: foldersList => dispatch(setFolder(foldersList)),\r\n    setFolderIdAction: folderId => dispatch(setFolderId(folderId))\r\n  }\r\n}\r\n\r\nfunction ContextMenu (props) {\r\n  const { setFolderAction, foldersList, setFolderIdAction, folderId, posContextMenu, setPosContextMenu, notesList } = props\r\n  const { mouseX, mouseY } = posContextMenu\r\n\r\n  const handleClose = () => {\r\n    setPosContextMenu(initialState)\r\n  }\r\n\r\n  const addFolderButton = () => {\r\n    const newData = _.cloneDeep(foldersList)\r\n    setFolderAction(arrPusher(newData))\r\n    handleClose()\r\n  }\r\n\r\n  const renameFolderButton = (event) => {\r\n    handleClose()\r\n    const newData = _.cloneDeep(foldersList)\r\n    setFolderAction(changeFolder('changeStatus', newData, folderId, false))\r\n  }\r\n\r\n  const removeFolderButton = () => {\r\n    const newDataFolders = _.cloneDeep(foldersList)\r\n    const newDataNotes = _.cloneDeep(notesList)\r\n    setFolderAction(arrRemoveFolder(newDataFolders, newDataNotes, folderId))\r\n    setFolderIdAction(0)\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <div style={{ cursor: 'context-menu' }}>\r\n      <Menu\r\n        keepMounted\r\n        open={mouseY !== null}\r\n        onClose={handleClose}\r\n        anchorReference=\"anchorPosition\"\r\n        anchorPosition={\r\n          mouseY !== null && mouseX !== null\r\n            ? { top: mouseY, left: mouseX }\r\n            : undefined\r\n        }\r\n      >\r\n        <MenuItem onClick={addFolderButton}>Add folder</MenuItem>\r\n        <MenuItem onClick={renameFolderButton}>Rename folder</MenuItem>\r\n        <MenuItem onClick={removeFolderButton}>Delete folder</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ContextMenu)\r\n\r\nContextMenu.propTypes = {\r\n  setFolderAction: PropTypes.func.isRequired,\r\n  foldersList: PropTypes.array.isRequired,\r\n  notesList: PropTypes.array.isRequired,\r\n  setPosContextMenu: PropTypes.func.isRequired,\r\n  posContextMenu: PropTypes.object.isRequired,\r\n  setFolderIdAction: PropTypes.func.isRequired,\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ])\r\n}\r\n","const SET_NOTE = 'SET_NOTE'\r\nconst SET_NOTE_ID = 'SET_NOTE_ID'\r\n\r\nconst initialState = {\r\n  notesList: JSON.parse(localStorage.getItem('arrNotes')) || [],\r\n  noteId: 0\r\n}\r\n\r\nexport function notesReducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_NOTE:\r\n      return { ...state, notesList: action.payload }\r\n\r\n    case SET_NOTE_ID:\r\n      return { ...state, noteId: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport function setNotes (notesList) {\r\n  return {\r\n    type: 'SET_NOTE',\r\n    payload: notesList\r\n  }\r\n}\r\n\r\nexport function setNoteId (noteId) {\r\n  return {\r\n    type: 'SET_NOTE_ID',\r\n    payload: noteId\r\n  }\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport _ from 'lodash'\r\nimport { changeFolder } from '../helper'\r\nimport ContextMenu from './contextMenu'\r\nimport { connect } from 'react-redux'\r\nimport { setFolder, setFolderId } from '../../../reducersFolder/folderReducer'\r\nimport { setNoteId } from '../../../reducersFolder/notesReducer'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    '& .MuiListItem-root': {\r\n      height: '20px',\r\n      padding: '15px 0px 15px 15px'\r\n    }\r\n  },\r\n  listItemStyle: {\r\n    height: '20px',\r\n    padding: '15px 0px 15px 15px'\r\n  },\r\n  rootInput: {\r\n    '& .Mui-focused': {\r\n      backgroundColor: '#75c1ff'\r\n    },\r\n    '& .Mui-disabled': {\r\n      color: 'black',\r\n      backgroundColor: 'none'\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { foldersList, folderId } = store.folder\r\n  const { noteId } = store.notes\r\n  return {\r\n    foldersList,\r\n    folderId,\r\n    noteId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFolderAction: foldersList => dispatch(setFolder(foldersList)),\r\n    setFolderIdAction: folderId => dispatch(setFolderId(folderId)),\r\n    setNoteIdAction: noteId => dispatch(setNoteId(noteId))\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  mouseX: null,\r\n  mouseY: null\r\n}\r\n\r\nfunction FolderItem (props, event) {\r\n  const classes = useStyles()\r\n  const { foldersList, folderId, setFolderIdAction, setFolderAction, itemId, itemName, itemStatus, setNoteIdAction, noteId } = props\r\n  const uniqid = require('uniqid')\r\n  const wrapperRef = useRef(null)\r\n  const [contextMenu, setContextMenu] = useState(initialState)\r\n\r\n  function useOutsideClose (ref) {\r\n    useEffect(() => {\r\n      function handleClickOutside (event) {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          const newData = _.cloneDeep(foldersList)\r\n          setFolderAction(changeFolder('renameFolder', newData, folderId, true, itemName))\r\n        }\r\n      }\r\n      document.addEventListener('mousedown', handleClickOutside)\r\n      return () => {\r\n        document.removeEventListener('mousedown', handleClickOutside)\r\n      }\r\n    }, [ref])\r\n  }\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    if (folderId !== itemId) {\r\n      setFolderIdAction(index)\r\n    }\r\n    if (noteId !== 0) {\r\n      setNoteIdAction(0)\r\n    }\r\n  }\r\n\r\n  const handleDoubleClick = (event) => {\r\n    event.preventDefault()\r\n    setContextMenu({\r\n      mouseX: event.clientX - 2,\r\n      mouseY: event.clientY - 4\r\n    })\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    const newData = _.cloneDeep(foldersList)\r\n    setFolderAction(changeFolder('renameFolder', newData, folderId, itemStatus, event.target.value))\r\n  }\r\n\r\n  if (itemStatus === false) {\r\n    useOutsideClose(wrapperRef)\r\n  }\r\n\r\n  return (\r\n    <div ref={wrapperRef} className={classes.root}>\r\n      <ListItem\r\n        key={uniqid()}\r\n        button\r\n        onDoubleClick={handleDoubleClick}\r\n        selected={folderId === itemId}\r\n        onClick={(event) => handleListItemClick(event, itemId)}\r\n      >\r\n        <ListItemText\r\n          primary={\r\n            <TextField\r\n              id={itemId}\r\n              className={classes.rootInput}\r\n              defaultValue={itemName}\r\n              onChange={handleOnChange}\r\n              InputProps={{\r\n                disableUnderline: true,\r\n                disabled: itemStatus,\r\n                autoFocus: true\r\n              }}\r\n            />\r\n          }\r\n        />\r\n      </ListItem>\r\n      <ContextMenu\r\n        posContextMenu={contextMenu}\r\n        setPosContextMenu={setContextMenu}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FolderItem)\r\n\r\nFolderItem.propTypes = {\r\n  itemId: PropTypes.string.isRequired,\r\n  itemName: PropTypes.string.isRequired,\r\n  itemStatus: PropTypes.bool.isRequired,\r\n  setFolderAction: PropTypes.func.isRequired,\r\n  foldersList: PropTypes.array.isRequired,\r\n  setFolderIdAction: PropTypes.func.isRequired,\r\n  setNoteIdAction: PropTypes.func.isRequired,\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ])\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport { connect } from 'react-redux'\r\nimport FolderItem from './folderItem'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    overflow: 'auto',\r\n    width: '100%',\r\n    backgroundColor: 'none',\r\n    paddingTop: '0px'\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { foldersList } = store.folder\r\n  return {\r\n    foldersList\r\n  }\r\n}\r\n\r\nfunction SelectedListItem (props) {\r\n  const classes = useStyles()\r\n  const { foldersList } = props\r\n  const uniqid = require('uniqid')\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n          {foldersList.map((item, index) => (\r\n            <FolderItem\r\n              key={uniqid()}\r\n              itemId={item.id}\r\n              itemName={item.name}\r\n              itemStatus={item.disableInput}\r\n            />\r\n          ))}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(SelectedListItem)\r\n\r\nSelectedListItem.propTypes = {\r\n  foldersList: PropTypes.array.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport { connect } from 'react-redux'\r\nimport { setFolder } from '../../../reducersFolder/folderReducer'\r\nimport { arrPusher } from '../helper'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    textTransform: 'none',\r\n    fontWeight: 'bold',\r\n    width: '100%',\r\n    display: '  flex',\r\n    justifyContent: 'flex-start',\r\n    paddingLeft: '15px'\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { foldersList } = store.folder\r\n  return {\r\n    foldersList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFolderAction: foldersList => dispatch(setFolder(foldersList))\r\n  }\r\n}\r\n\r\nfunction IconLabelButtons (props) {\r\n  const classes = useStyles()\r\n  const { foldersList, setFolderAction } = props\r\n  const newData = _.cloneDeep(foldersList)\r\n\r\n  const handleButtonClick = () => {\r\n    setFolderAction(arrPusher(newData))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.buttonStyle}>\r\n      <Button\r\n        className={classes.root}\r\n        startIcon={<AddCircleOutlineIcon />}\r\n        onClick={handleButtonClick}\r\n      >\r\n        New Folder\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IconLabelButtons)\r\n\r\nIconLabelButtons.propTypes = {\r\n  foldersList: PropTypes.array.isRequired,\r\n  setFolderAction: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport SelectedListItem from './folderList/index'\r\nimport IconLabelButtons from './newFolderButton/Index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    '& > *': {\r\n      display: 'flex',\r\n      height: '95vh',\r\n      flexDirection: 'column',\r\n      justifyContent: 'space-between',\r\n      backgroundColor: '#f7f6f7'\r\n    }\r\n  }\r\n}))\r\n\r\nexport default function LeftBlock () {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper variant=\"outlined\" square>\r\n        <SelectedListItem/>\r\n        <IconLabelButtons/>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n","import _ from 'lodash'\r\n\r\nconst options = {\r\n  year: 'numeric',\r\n  month: 'long',\r\n  day: 'numeric',\r\n  weekday: 'long',\r\n  hour: 'numeric',\r\n  minute: 'numeric'\r\n}\r\n// func for add new note\r\nexport const arrPusher = (arr, folderId) => {\r\n  const uniqid = require('uniqid')\r\n  const date = new Date()\r\n  arr.push({\r\n    id: uniqid(),\r\n    folderId: folderId,\r\n    name: 'New Note',\r\n    disableInput: true,\r\n    date: date.toLocaleDateString(),\r\n    dateNote: date.toLocaleString('en-US', options)\r\n  })\r\n  localStorage.setItem('arrNotes', JSON.stringify(arr))\r\n  return (arr)\r\n}\r\n// func for remove note\r\nexport const arrRemoveNote = (arr, noteId) => {\r\n  const newArr = _.filter(arr, function (item) { return item.id !== noteId })\r\n  localStorage.setItem('arrNotes', JSON.stringify(newArr))\r\n  return (newArr)\r\n}\r\n// func for change note\r\nexport const changeNote = (type, arr, Id, status, value) => {\r\n  const newArr = arr.map(function (item) {\r\n    if (item.id === Id) {\r\n      return (\r\n        {\r\n          id: item.id,\r\n          folderId: item.folderId,\r\n          name: type === 'renameNote' ? value : item.name,\r\n          disableInput: status,\r\n          noteValue: type === 'changeNoteValue' ? value : item.noteValue || '',\r\n          date: item.date,\r\n          dateNote: item.dateNote\r\n        }\r\n      )\r\n    } else {\r\n      return (item)\r\n    }\r\n  })\r\n  localStorage.setItem('arrNotes', JSON.stringify(newArr))\r\n  return (newArr)\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport _ from 'lodash'\r\nimport { arrPusher, arrRemoveNote, changeNote } from '../helper'\r\nimport { connect } from 'react-redux'\r\nimport { setNotes, setNoteId } from '../../../reducersFolder/notesReducer'\r\n\r\nconst initialState = {\r\n  mouseX: null,\r\n  mouseY: null\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  const { notesList, noteId } = store.notes\r\n  const { folderId } = store.folder\r\n  return {\r\n    notesList,\r\n    noteId,\r\n    folderId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNotesAction: notesList => dispatch(setNotes(notesList)),\r\n    setNoteIdAction: noteId => dispatch(setNoteId(noteId))\r\n  }\r\n}\r\n\r\nfunction ContextMenu (props) {\r\n  const { setNotesAction, notesList, setNoteIdAction, noteId, posContextMenu, setPosContextMenu, folderId } = props\r\n  const { mouseX, mouseY } = posContextMenu\r\n\r\n  const handleClose = () => {\r\n    setPosContextMenu(initialState)\r\n  }\r\n\r\n  const addNoteButton = () => {\r\n    const newData = _.cloneDeep(notesList)\r\n    setNotesAction(arrPusher(newData, folderId))\r\n    handleClose()\r\n  }\r\n\r\n  const renameNoteButton = (event) => {\r\n    handleClose()\r\n    const newData = _.cloneDeep(notesList)\r\n    setNotesAction(changeNote('changeStatus', newData, noteId, false))\r\n  }\r\n\r\n  const removeNoteButton = () => {\r\n    const newData = _.cloneDeep(notesList)\r\n    setNotesAction(arrRemoveNote(newData, noteId))\r\n    setNoteIdAction(0)\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <div style={{ cursor: 'context-menu' }}>\r\n      <Menu\r\n        keepMounted\r\n        open={mouseY !== null}\r\n        onClose={handleClose}\r\n        anchorReference=\"anchorPosition\"\r\n        anchorPosition={\r\n          mouseY !== null && mouseX !== null\r\n            ? { top: mouseY, left: mouseX }\r\n            : undefined\r\n        }\r\n      >\r\n        <MenuItem onClick={addNoteButton}>Add Note</MenuItem>\r\n        <MenuItem onClick={renameNoteButton}>Rename Note</MenuItem>\r\n        <MenuItem onClick={removeNoteButton}>Delete Note</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ContextMenu)\r\n\r\nContextMenu.propTypes = {\r\n  setNotesAction: PropTypes.func.isRequired,\r\n  notesList: PropTypes.array.isRequired,\r\n  setPosContextMenu: PropTypes.func.isRequired,\r\n  posContextMenu: PropTypes.object.isRequired,\r\n  setNoteIdAction: PropTypes.func.isRequired,\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ])\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport _ from 'lodash'\r\nimport { changeNote } from '../helper'\r\nimport ContextMenu from './contextMenu'\r\nimport { connect } from 'react-redux'\r\nimport { setNotes, setNoteId } from '../../../reducersFolder/notesReducer'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    '& .Mui-selected': {\r\n      backgroundColor: '#fde46e'\r\n    },\r\n    '& .MuiListItemText-root': {\r\n      flex: '0'\r\n    },\r\n    '& .MuiListItem-root': {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'flex-start',\r\n      paddingLeft: '40px'\r\n    }\r\n  },\r\n  rootInput: {\r\n    '& .Mui-focused': {\r\n      backgroundColor: '#75c1ff'\r\n    },\r\n    '& .Mui-disabled': {\r\n      color: 'black',\r\n      backgroundColor: 'none'\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { notesList, noteId } = store.notes\r\n  return {\r\n    notesList,\r\n    noteId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNotesAction: notesList => dispatch(setNotes(notesList)),\r\n    setNoteIdAction: noteId => dispatch(setNoteId(noteId))\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  mouseX: null,\r\n  mouseY: null\r\n}\r\n\r\nfunction NotesItem (props, event) {\r\n  const classes = useStyles()\r\n  const { notesList, noteId, setNoteIdAction, setNotesAction, itemId, itemName, itemStatus, itemDate, index } = props\r\n  const wrapperRef = useRef(null)\r\n  const [contextMenu, setContextMenu] = useState(initialState)\r\n\r\n  function useOutsideClose (ref) {\r\n    useEffect(() => {\r\n      function handleClickOutside (event) {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          const newData = _.cloneDeep(notesList)\r\n          setNotesAction(changeNote('renameNote', newData, noteId, true, itemName))\r\n        }\r\n      }\r\n      document.addEventListener('mousedown', handleClickOutside)\r\n      return () => {\r\n        document.removeEventListener('mousedown', handleClickOutside)\r\n      }\r\n    }, [ref])\r\n  }\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    if (noteId !== itemId) {\r\n      setNoteIdAction(index)\r\n    }\r\n  }\r\n\r\n  const handleDoubleClick = (event) => {\r\n    event.preventDefault()\r\n    setContextMenu({\r\n      mouseX: event.clientX - 2,\r\n      mouseY: event.clientY - 4\r\n    })\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    const newData = _.cloneDeep(notesList)\r\n    setNotesAction(changeNote('renameNote', newData, noteId, itemStatus, event.target.value))\r\n  }\r\n\r\n  if (itemStatus === false) {\r\n    useOutsideClose(wrapperRef)\r\n  }\r\n\r\n  return (\r\n    <div ref={wrapperRef} className={classes.root}>\r\n      <Draggable index={index} draggableId={itemId} key={itemId} type=\"TASK\">\r\n        {(provided, snapshot) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n          >\r\n            <ListItem\r\n              button\r\n              onDoubleClick={handleDoubleClick}\r\n              selected={noteId === itemId}\r\n              onClick={(event) => handleListItemClick(event, itemId)}\r\n            >\r\n              <ListItemText\r\n                primary={\r\n                  <TextField\r\n                    id={itemId}\r\n                    className={classes.rootInput}\r\n                    value={itemName}\r\n                    onChange={handleOnChange}\r\n                    InputProps={{\r\n                      disableUnderline: true,\r\n                      disabled: itemStatus,\r\n                      autoFocus: true\r\n                    }}\r\n                  />\r\n                }\r\n              />\r\n              <div>{itemDate}</div>\r\n            </ListItem>\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n      <ContextMenu\r\n        posContextMenu={contextMenu}\r\n        setPosContextMenu={setContextMenu}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NotesItem)\r\n\r\nNotesItem.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  itemId: PropTypes.string.isRequired,\r\n  itemName: PropTypes.string.isRequired,\r\n  itemDate: PropTypes.string.isRequired,\r\n  itemStatus: PropTypes.bool.isRequired,\r\n  setNotesAction: PropTypes.func.isRequired,\r\n  notesList: PropTypes.array.isRequired,\r\n  setNoteIdAction: PropTypes.func.isRequired,\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ])\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport { connect } from 'react-redux'\r\nimport NotesItem from './notesItem'\r\nimport _ from 'lodash'\r\nimport { Droppable, DragDropContext } from 'react-beautiful-dnd'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    overflow: 'auto',\r\n    backgroundColor: 'none',\r\n    height: '95vh',\r\n    '& > *': {\r\n      padding: '0px',\r\n      width: '100%'\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { notesList } = store.notes\r\n  const { folderId } = store.folder\r\n  return {\r\n    notesList,\r\n    folderId\r\n  }\r\n}\r\n\r\nfunction SelectedListItem (props) {\r\n  const classes = useStyles()\r\n  const { notesList, folderId } = props\r\n  const uniqid = require('uniqid')\r\n  const [characters, updateCharacters] = useState([])\r\n  useEffect(() => {\r\n    const init = _.filter(notesList, function (item) { return item.folderId === folderId })\r\n    updateCharacters(init)\r\n  }, [folderId, notesList])\r\n\r\n  function handleOnDragEnd (result) {\r\n    if (!result.destination) return\r\n    const items = Array.from(characters)\r\n    const [reorderedItem] = items.splice(result.source.index, 1)\r\n    items.splice(result.destination.index, 0, reorderedItem)\r\n\r\n    return updateCharacters(items)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <DragDropContext onDragEnd={handleOnDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {(provided) => (\r\n            <List\r\n              className=\"characters\"\r\n              component=\"nav\"\r\n              aria-label=\"main mailbox folders\"\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              {characters.map((item, index) => (\r\n                <NotesItem\r\n                  key={uniqid()}\r\n                  index={index}\r\n                  itemId={item.id}\r\n                  itemName={item.name}\r\n                  itemStatus={item.disableInput}\r\n                  itemDate={item.date}\r\n                />\r\n              ))}\r\n              {provided.placeholder}\r\n            </List>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(SelectedListItem)\r\n\r\nSelectedListItem.propTypes = {\r\n  notesList: PropTypes.array.isRequired,\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ])\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport SelectedListItem from './notesList'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    '& > *': {\r\n      display: 'flex',\r\n      height: '95vh',\r\n      flexDirection: 'column',\r\n      justifyContent: 'space-between',\r\n      backgroundColor: '#f7f6f7'\r\n    }\r\n  }\r\n}))\r\n\r\nexport default function CenterBlock () {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper variant=\"outlined\" square>\r\n        <SelectedListItem style={{}}/>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  timeStyle: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    color: '#bababa',\r\n    marginTop: '20px'\r\n  }\r\n}))\r\n\r\nexport default function NoteTime (props) {\r\n  const classes = useStyles()\r\n  const { itemTime } = props\r\n\r\n  return (\r\n    <div className={classes.timeStyle}>\r\n         {itemTime}\r\n    </div>\r\n  )\r\n}\r\n\r\nNoteTime.propTypes = {\r\n  itemTime: PropTypes.string.isRequired\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { setNoteId, setNotes } from '../../reducersFolder/notesReducer'\r\nimport { changeNote } from '../notesBlock/helper'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textAreaStyle: {\r\n    width: '99%',\r\n    border: '0px',\r\n    height: '85vh',\r\n    resize: 'none',\r\n    outline: 'none',\r\n    backgroundColor: '#f7f6f7',\r\n    marginTop: '20px'\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { noteId, notesList } = store.notes\r\n\r\n  return {\r\n    noteId,\r\n    notesList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNoteIdAction: noteId => dispatch(setNoteId(noteId)),\r\n    setNotesAction: notesList => dispatch(setNotes(notesList))\r\n  }\r\n}\r\n\r\nfunction NoteTextArea (props) {\r\n  const classes = useStyles()\r\n  const { noteId, notesList, setNotesAction, defaultValue } = props\r\n\r\n  const handleOnlChange = (event) => {\r\n    const newData = _.cloneDeep(notesList)\r\n    setNotesAction(changeNote('changeNoteValue', newData, noteId, true, event.target.value))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <textarea\r\n            className={classes.textAreaStyle}\r\n            defaultValue={defaultValue}\r\n            onBlur={handleOnlChange}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NoteTextArea)\r\n\r\nNoteTextArea.propTypes = {\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  notesList: PropTypes.array.isRequired,\r\n  setNotesAction: PropTypes.func.isRequired,\r\n  defaultValue: PropTypes.string\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport NoteTime from './noteTime'\r\nimport NoteTextArea from './noteTextArea'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    '& > *': {\r\n      display: 'flex',\r\n      height: '95vh',\r\n      flexDirection: 'column',\r\n      backgroundColor: '#f7f6f7'\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { noteId, notesList } = store.notes\r\n\r\n  return {\r\n    noteId,\r\n    notesList\r\n  }\r\n}\r\n\r\nfunction NoteText (props) {\r\n  const classes = useStyles()\r\n  const { noteId, notesList } = props\r\n  const uniqid = require('uniqid')\r\n  const currItem = _.filter(notesList, function (item) { return item.id === noteId })\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper variant=\"outlined\" square>\r\n        {currItem.map((item) => (\r\n          <div key={uniqid()}>\r\n            <NoteTime itemTime={item.dateNote}/>\r\n            <NoteTextArea defaultValue={item.noteValue}/>\r\n          </div>\r\n        ))}\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(NoteText)\r\n\r\nNoteText.propTypes = {\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  notesList: PropTypes.array.isRequired\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      height: '10px',\r\n      width: '10px',\r\n      borderRadius: '10px',\r\n      margin: '7px 0px 0px 5px'\r\n    }\r\n  },\r\n  redButton: {\r\n    backgroundColor: '#fd5a52'\r\n  },\r\n  yellowButton: {\r\n    backgroundColor: '#fdbb3f'\r\n  },\r\n  greenButton: {\r\n    backgroundColor: '#31c747'\r\n  }\r\n}))\r\n\r\nexport default function ClosingMenu () {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <div className={classes.redButton}></div>\r\n        <div className={classes.yellowButton}></div>\r\n        <div className={classes.greenButton}></div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { setNotes, setNoteId } from '../../reducersFolder/notesReducer'\r\nimport { setFolder, setFolderId } from '../../reducersFolder/folderReducer'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ViewCompactOutlinedIcon from '@material-ui/icons/ViewCompactOutlined'\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined'\r\nimport NoteAddOutlinedIcon from '@material-ui/icons/NoteAddOutlined'\r\nimport { arrPusher, arrRemoveNote } from '../notesBlock/helper'\r\nimport { arrRemoveFolder } from '../folderBlock/helper'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    marginLeft: '30%',\r\n    '& > *': {\r\n      marginLeft: '15px',\r\n      marginTop: '5px',\r\n      padding: '0px',\r\n      width: '40px',\r\n      height: '20px',\r\n      borderRadius: '3px',\r\n      backgroundColor: '#f5f5f5',\r\n      boxShadow: '0 5px 4px -4px rgba(0, 0, 0, .2) '\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { noteId, notesList } = store.notes\r\n  const { folderId, foldersList } = store.folder\r\n\r\n  return {\r\n    noteId,\r\n    folderId,\r\n    notesList,\r\n    foldersList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNotesAction: notesList => dispatch(setNotes(notesList)),\r\n    setNoteIdAction: noteId => dispatch(setNoteId(noteId)),\r\n    setFolderAction: foldersList => dispatch(setFolder(foldersList)),\r\n    setFolderIdAction: folderId => dispatch(setFolderId(folderId))\r\n  }\r\n}\r\n\r\nfunction ButtonsBlock (props) {\r\n  const classes = useStyles()\r\n  const { folderListDisplay, setFolderListDisplay, notesList, folderId, setNotesAction, setNoteIdAction, noteId, foldersList, setFolderAction, setFolderIdAction } = props\r\n\r\n  const changeDisplay = () => {\r\n    if (folderListDisplay === 'block') {\r\n      setFolderListDisplay('none')\r\n    } else {\r\n      setFolderListDisplay('block')\r\n    }\r\n  }\r\n\r\n  const addNoteButton = () => {\r\n    if (folderId !== 0) {\r\n      const newData = _.cloneDeep(notesList)\r\n      setNotesAction(arrPusher(newData, folderId))\r\n    }\r\n  }\r\n\r\n  const removeActiveElement = () => {\r\n    const newDataFolders = _.cloneDeep(foldersList)\r\n    const newDataNotes = _.cloneDeep(notesList)\r\n    if (noteId === 0) {\r\n      setFolderAction(arrRemoveFolder(newDataFolders, newDataNotes, folderId))\r\n      setFolderIdAction(0)\r\n    } else {\r\n      setNotesAction(arrRemoveNote(newDataNotes, noteId))\r\n      setNoteIdAction(0)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton aria-label='Close/Open folder list' onClick={changeDisplay}>\r\n        <ViewCompactOutlinedIcon fontSize='small'/>\r\n      </IconButton>\r\n      <IconButton aria-label='Delete current element' onClick={removeActiveElement}>\r\n        <DeleteOutlineOutlinedIcon fontSize='small' />\r\n      </IconButton>\r\n      <IconButton aria-label='Add note' onClick={addNoteButton}>\r\n        <NoteAddOutlinedIcon fontSize='small' />\r\n      </IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ButtonsBlock)\r\n\r\nButtonsBlock.propTypes = {\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  notesList: PropTypes.array.isRequired,\r\n  foldersList: PropTypes.array.isRequired,\r\n  setNotesAction: PropTypes.func.isRequired,\r\n  setFolderAction: PropTypes.func.isRequired,\r\n  setNoteIdAction: PropTypes.func.isRequired,\r\n  setFolderIdAction: PropTypes.func.isRequired,\r\n  folderListDisplay: PropTypes.string.isRequired,\r\n  setFolderListDisplay: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ClosingMenu from './closingMenu'\r\nimport ButtonsBlock from './buttonsBlock'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '30px',\r\n    backgroundColor: '#e1dee1',\r\n    borderTopLeftRadius: '5px',\r\n    borderTopRightRadius: '5px',\r\n    boxShadow: '0 0 5px white inset',\r\n    display: 'flex'\r\n  }\r\n}))\r\n\r\nexport default function TopMenu (props) {\r\n  const classes = useStyles()\r\n  const { folderListDisplay, setFolderListDisplay } = props\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ClosingMenu/>\r\n      <ButtonsBlock folderListDisplay={folderListDisplay} setFolderListDisplay={setFolderListDisplay} />\r\n    </div>\r\n  )\r\n}\r\n\r\nTopMenu.propTypes = {\r\n  folderListDisplay: PropTypes.string.isRequired,\r\n  setFolderListDisplay: PropTypes.func.isRequired\r\n}\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport LeftBlock from './components/folderBlock/Index'\r\nimport CenterBlock from './components/notesBlock/Index'\r\nimport NoteText from './components/note/index'\r\nimport TopMenu from './components/topMenu/index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  topMenu: {\r\n    margin: '1px 1px 0px 1px',\r\n    display: 'flex'\r\n  },\r\n  main: {\r\n    display: 'flex',\r\n    height: '95vh'\r\n  },\r\n  center: {\r\n    flex: '0 25%'\r\n  },\r\n  right: {\r\n    flex: '1 50%'\r\n  }\r\n}))\r\n\r\nfunction App () {\r\n  const [folderListDisplay, setFolderListDisplay] = useState('block')\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.topMenu}>\r\n        <TopMenu folderListDisplay={folderListDisplay} setFolderListDisplay={setFolderListDisplay}/>\r\n      </div>\r\n      <div className={classes.main}>\r\n        <div style={{ flex: '0 25%', display: folderListDisplay }}><LeftBlock/></div>\r\n        <div className={classes.center}><CenterBlock/></div>\r\n        <div className={classes.right}><NoteText/></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import 'web-vitals'\r\nconst reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    ('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import { combineReducers } from 'redux'\r\nimport { folderReducer } from './folderReducer'\r\nimport { notesReducer } from './notesReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  folder: folderReducer,\r\n  notes: notesReducer\r\n})\r\n","import { createStore } from 'redux'\r\nimport { rootReducer } from '../reducersFolder/index'\r\nimport { devToolsEnhancer } from 'redux-devtools-extension'\r\n\r\nexport const store = createStore(rootReducer, devToolsEnhancer())\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './storeFolder/store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\nreportWebVitals()\r\n"],"sourceRoot":""}