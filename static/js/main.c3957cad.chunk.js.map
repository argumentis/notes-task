{"version":3,"sources":["reducersFolder/mainReducer.js","folderBlock/folderList.js","folderBlock/newFolderButton/Index.js","folderBlock/newFolderButton/helper.js","folderBlock/Index.js","App.js","reportWebVitals.js","reducersFolder/index.js","storeFolder/store.js","index.js"],"names":["SET_FOLDER","SET_FOLDER_ID","initialState","foldersList","JSON","parse","localStorage","getItem","folderId","setFolder","type","payload","useStyles","makeStyles","theme","root","overflow","width","backgroundColor","palette","background","paper","rootInput","color","mouseX","mouseY","connect","store","main","dispatch","setFolderAction","setFolderIdAction","setFolderId","props","classes","React","useState","state","setState","uniqid","require","handleClick","event","preventDefault","clientX","clientY","handleClose","className","List","component","aria-label","map","item","ListItem","button","selected","id","onClick","index","onDoubleClick","ListItemText","primary","TextField","defaultValue","name","InputProps","disableUnderline","disabled","Menu","keepMounted","open","onClose","anchorReference","anchorPosition","top","left","undefined","MenuItem","textTransform","fontWeight","newData","_","cloneDeep","Button","startIcon","arr","push","setItem","stringify","arrPusher","display","flexWrap","margin","spacing","height","flexDirection","justifyContent","LeftBlock","Paper","variant","square","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3957cad.chunk.js","sourcesContent":["const SET_FOLDER = 'SET_FOLDER'\r\nconst SET_FOLDER_ID = 'SET_FOLDER_ID'\r\n\r\n\r\nconst initialState = {\r\n  foldersList: JSON.parse(localStorage.getItem('arrFolders')) || [],\r\n  folderId: 0,\r\n}\r\n\r\nJSON.parse(localStorage.getItem('arrFolders')) || []\r\n\r\nexport function mainReducer (state = initialState, action) {\r\n  switch (action.type) {\r\n\r\n    case SET_FOLDER:\r\n      return { ...state, foldersList: action.payload }\r\n\r\n    case SET_FOLDER_ID:\r\n      return { ...state, folderId: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport function setFolder (foldersList) {\r\n  return {\r\n    type: 'SET_FOLDER',\r\n    payload: foldersList\r\n  }\r\n}\r\n\r\nexport function setFolderId (folderId) {\r\n  return {\r\n    type: 'SET_FOLDER_ID',\r\n    payload: folderId\r\n  }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux'\r\nimport { setFolder, setFolderId} from '../reducersFolder/mainReducer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    overflow: 'auto',\r\n    width: '100%', \r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  rootInput: {\r\n    '& .Mui-disabled': {\r\n      color: 'black',\r\n    }\r\n  },\r\n}));\r\n\r\nconst mapStateToProps = store => {\r\n  const { foldersList, folderId} = store.main\r\n  return {\r\n    foldersList,\r\n    folderId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFolderAction: foldersList => dispatch(setFolder(foldersList)),\r\n    setFolderIdAction: folderId => dispatch(setFolderId(folderId))\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  mouseX: null,\r\n  mouseY: null,\r\n};\r\n\r\nfunction SelectedListItem(props) {\r\n  const classes = useStyles()\r\n  const { foldersList, folderId, setFolderIdAction } = props\r\n  const [state, setState] = React.useState(initialState);\r\n  const uniqid = require('uniqid')\r\n\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    setState({\r\n      mouseX: event.clientX - 2,\r\n      mouseY: event.clientY - 4,\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setState(initialState);\r\n  };\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    setFolderIdAction(index)\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n        {foldersList.map((item) => (\r\n          <ListItem\r\n            key={uniqid()}\r\n            button\r\n            selected={folderId === item.id}\r\n            onClick={(event) => handleListItemClick(event, item.id)}\r\n            onDoubleClick={handleClick}\r\n          >\r\n            <ListItemText \r\n              primary={\r\n                <TextField \r\n                  className={classes.rootInput}\r\n                  defaultValue={`${item.name}`}\r\n                  InputProps={{\r\n                    disableUnderline: true,\r\n                    disabled: true\r\n                  }}\r\n                />\r\n              }\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Menu\r\n        keepMounted\r\n        open={state.mouseY !== null}\r\n        onClose={handleClose}\r\n        anchorReference=\"anchorPosition\"\r\n        anchorPosition={\r\n          state.mouseY !== null && state.mouseX !== null\r\n            ? { top: state.mouseY, left: state.mouseX }\r\n            : undefined\r\n        }\r\n      >\r\n        <MenuItem onClick={handleClose}>Add folder</MenuItem>\r\n        <MenuItem onClick={handleClose}>Rename folder</MenuItem>\r\n        <MenuItem onClick={handleClose}>Delete folder</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SelectedListItem)\r\n\r\nSelectedListItem.propTypes = {\r\n  foldersList: PropTypes.array.isRequired,\r\n  setFolderIdAction: PropTypes.func.isRequired,\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport { connect } from 'react-redux'\r\nimport { setFolder } from '../../reducersFolder/mainReducer';\r\nimport { arrPusher } from './helper'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n  root: {\r\n    textTransform: 'none',\r\n    fontWeight: 'bold',\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\nconst mapStateToProps = store => {\r\n  const { foldersList } = store.main\r\n  return {\r\n    foldersList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFolderAction: foldersList => dispatch(setFolder(foldersList)),\r\n  }\r\n}\r\n\r\nfunction IconLabelButtons(props) {\r\n  const classes = useStyles()\r\n  const { foldersList, setFolderAction } = props\r\n  const newData = _.cloneDeep(foldersList)\r\n\r\n  const handleButtonClick = () => {\r\n    setFolderAction(arrPusher( newData ))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        className={classes.root}\r\n        startIcon={<AddCircleOutlineIcon />}\r\n        onClick={handleButtonClick}\r\n      >\r\n        New Folder\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IconLabelButtons)\r\n\r\nIconLabelButtons.propTypes = {\r\n  foldersList: PropTypes.array.isRequired,\r\n  setFolderAction: PropTypes.func.isRequired\r\n}\r\n","export const arrPusher = (arr) => {\r\n    const uniqid = require('uniqid')\r\n    arr.push({\r\n      id: uniqid(),\r\n      name: 'New Folder',\r\n    })\r\n    localStorage.setItem('arrFolders', JSON.stringify(arr))\r\n    return (arr)\r\n  }\r\n  ","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport SelectedListItem from './folderList'\r\nimport IconLabelButtons from './newFolderButton/Index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(25),\r\n      height: theme.spacing(95),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'space-between'\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function LeftBlock() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper variant=\"outlined\" square>\r\n        <SelectedListItem/>\r\n        <IconLabelButtons/>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}","import React from 'react'\nimport LeftBlock from './folderBlock/Index'\n\nfunction App () {\n  return (\n    <div className=\"App\">\n      <LeftBlock/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux'\r\nimport { mainReducer } from './mainReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  main: mainReducer\r\n})\r\n","import { createStore } from 'redux'\r\nimport { rootReducer } from '../reducersFolder/index'\r\nimport { devToolsEnhancer } from 'redux-devtools-extension'\r\n\r\nexport const store = createStore(rootReducer, devToolsEnhancer())\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from './storeFolder/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}