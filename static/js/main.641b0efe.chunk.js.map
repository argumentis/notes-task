{"version":3,"sources":["components/folderBlock/helper.js","reducersFolder/folderReducer.js","components/folderBlock/folderList/contextMenu.js","reducersFolder/notesReducer.js","components/folderBlock/folderList/folderItem.js","components/folderBlock/folderList/index.js","components/folderBlock/newFolderButton/Index.js","components/folderBlock/Index.js","components/notesBlock/helper.js","components/notesBlock/notesList/contextMenu.js","components/notesBlock/notesList/notesItem.js","components/notesBlock/notesList/index.js","components/notesBlock/Index.js","components/note/noteTime.js","components/note/helper.js","components/note/noteTextArea.js","components/note/index.js","components/topMenu/closingMenu.js","components/topMenu/buttonsBlock.js","components/topMenu/index.js","App.js","reportWebVitals.js","reducersFolder/index.js","storeFolder/store.js","index.js"],"names":["arrPusher","arr","uniqid","require","push","id","name","disableInput","localStorage","setItem","JSON","stringify","arrRemoveFolder","arrFolders","arrNotes","folderId","newArr","_","filter","item","newArrNotes","arrRenameFolder","value","status","map","SET_FOLDER","SET_FOLDER_ID","initialState","foldersList","parse","getItem","setFolder","type","payload","setFolderId","mouseX","mouseY","connect","store","folder","notesList","notes","dispatch","setFolderAction","setFolderIdAction","props","posContextMenu","setPosContextMenu","handleClose","style","cursor","Menu","keepMounted","open","onClose","anchorReference","anchorPosition","top","left","undefined","MenuItem","onClick","newData","cloneDeep","event","changeStatusFolder","newDataFolders","newDataNotes","SET_NOTE","SET_NOTE_ID","noteId","setNotes","setNoteId","useStyles","makeStyles","root","height","padding","listItemStyle","rootInput","backgroundColor","color","setNoteIdAction","ref","classes","itemId","itemName","itemStatus","wrapperRef","useRef","useState","contextMenu","setContextMenu","useEffect","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","className","ListItem","button","onDoubleClick","preventDefault","clientX","clientY","selected","index","ListItemText","primary","TextField","defaultValue","onChange","InputProps","disableUnderline","disabled","autoFocus","theme","overflow","width","paddingTop","List","component","aria-label","textTransform","fontWeight","display","justifyContent","paddingLeft","buttonStyle","Button","startIcon","flexDirection","LeftBlock","Paper","variant","square","options","year","month","day","weekday","hour","minute","date","Date","toLocaleDateString","dateNote","toLocaleString","arrRemoveNote","arrRenameNote","Id","noteValue","setNotesAction","flex","alignItems","itemDate","CenterBlock","timeStyle","marginTop","NoteTime","itemTime","textAreaStyle","border","resize","outline","onBlur","arrChangeValueNote","currItem","borderRadius","margin","redButton","yellowButton","greenButton","ClosingMenu","marginLeft","boxShadow","folderListDisplay","setFolderListDisplay","IconButton","fontSize","borderTopLeftRadius","borderTopRightRadius","TopMenu","topMenu","main","center","right","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","state","action","createStore","devToolsEnhancer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.641b0efe.chunk.js","sourcesContent":["import _ from 'lodash'\r\n// func for add new folders\r\nexport const arrPusher = (arr) => {\r\n  const uniqid = require('uniqid')\r\n  arr.push({\r\n    id: uniqid(),\r\n    name: 'New Folder',\r\n    disableInput: true\r\n  })\r\n  localStorage.setItem('arrFolders', JSON.stringify(arr))\r\n  return (arr)\r\n}\r\n// func for remove folder\r\nexport const arrRemoveFolder = (arrFolders, arrNotes, folderId) => {\r\n  const newArr = _.filter(arrFolders, function (item) { return item.id !== folderId })\r\n  const newArrNotes = _.filter(arrNotes, function (item) { return item.folderId !== folderId })\r\n  localStorage.setItem('arrFolders', JSON.stringify(newArr))\r\n  localStorage.setItem('arrNotes', JSON.stringify(newArrNotes))\r\n  return (newArr)\r\n}\r\n// func for change folder name\r\nexport const arrRenameFolder = (arr, folderId, value, status) => {\r\n  const newArr = arr.map(function (item) {\r\n    if (item.id === folderId) {\r\n      return (\r\n        {\r\n          id: item.id,\r\n          name: value,\r\n          disableInput: status\r\n        }\r\n      )\r\n    } else {\r\n      return (item)\r\n    }\r\n  })\r\n  localStorage.setItem('arrFolders', JSON.stringify(newArr))\r\n  return (newArr)\r\n}\r\n// func for change folder status flag\r\nexport const changeStatusFolder = (arr, folderId) => {\r\n  const newArr = arr.map(function (item) {\r\n    if (item.id === folderId) {\r\n      return (\r\n        {\r\n          id: item.id,\r\n          name: item.name,\r\n          disableInput: false\r\n        }\r\n      )\r\n    } else {\r\n      return (item)\r\n    }\r\n  })\r\n  return (newArr)\r\n}\r\n","const SET_FOLDER = 'SET_FOLDER'\r\nconst SET_FOLDER_ID = 'SET_FOLDER_ID'\r\n\r\nconst initialState = {\r\n  foldersList: JSON.parse(localStorage.getItem('arrFolders')) || [],\r\n  folderId: 0\r\n}\r\n\r\nexport function folderReducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_FOLDER:\r\n      return { ...state, foldersList: action.payload }\r\n\r\n    case SET_FOLDER_ID:\r\n      return { ...state, folderId: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport function setFolder (foldersList) {\r\n  return {\r\n    type: 'SET_FOLDER',\r\n    payload: foldersList\r\n  }\r\n}\r\n\r\nexport function setFolderId (folderId) {\r\n  return {\r\n    type: 'SET_FOLDER_ID',\r\n    payload: folderId\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport _ from 'lodash'\r\nimport { arrPusher, arrRemoveFolder, changeStatusFolder } from '../helper'\r\nimport { connect } from 'react-redux'\r\nimport { setFolder, setFolderId } from '../../../reducersFolder/folderReducer'\r\n\r\nconst initialState = {\r\n  mouseX: null,\r\n  mouseY: null\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  const { foldersList, folderId } = store.folder\r\n  const { notesList } = store.notes\r\n  return {\r\n    foldersList,\r\n    folderId,\r\n    notesList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFolderAction: foldersList => dispatch(setFolder(foldersList)),\r\n    setFolderIdAction: folderId => dispatch(setFolderId(folderId))\r\n  }\r\n}\r\n\r\nfunction ContextMenu (props) {\r\n  const { setFolderAction, foldersList, setFolderIdAction, folderId, posContextMenu, setPosContextMenu, notesList } = props\r\n  const { mouseX, mouseY } = posContextMenu\r\n\r\n  const handleClose = () => {\r\n    setPosContextMenu(initialState)\r\n  }\r\n\r\n  const addFolderButton = () => {\r\n    const newData = _.cloneDeep(foldersList)\r\n    setFolderAction(arrPusher(newData))\r\n    handleClose()\r\n  }\r\n\r\n  const renameFolderButton = (event) => {\r\n    handleClose()\r\n    const newData = _.cloneDeep(foldersList)\r\n    setFolderAction(changeStatusFolder(newData, folderId))\r\n  }\r\n\r\n  const removeFolderButton = () => {\r\n    const newDataFolders = _.cloneDeep(foldersList)\r\n    const newDataNotes = _.cloneDeep(notesList)\r\n    setFolderAction(arrRemoveFolder(newDataFolders, newDataNotes, folderId))\r\n    setFolderIdAction(0)\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <div style={{ cursor: 'context-menu' }}>\r\n      <Menu\r\n        keepMounted\r\n        open={mouseY !== null}\r\n        onClose={handleClose}\r\n        anchorReference=\"anchorPosition\"\r\n        anchorPosition={\r\n          mouseY !== null && mouseX !== null\r\n            ? { top: mouseY, left: mouseX }\r\n            : undefined\r\n        }\r\n      >\r\n        <MenuItem onClick={addFolderButton}>Add folder</MenuItem>\r\n        <MenuItem onClick={renameFolderButton}>Rename folder</MenuItem>\r\n        <MenuItem onClick={removeFolderButton}>Delete folder</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ContextMenu)\r\n\r\nContextMenu.propTypes = {\r\n  setFolderAction: PropTypes.func.isRequired,\r\n  foldersList: PropTypes.array.isRequired,\r\n  notesList: PropTypes.array.isRequired,\r\n  setPosContextMenu: PropTypes.func.isRequired,\r\n  posContextMenu: PropTypes.object.isRequired,\r\n  setFolderIdAction: PropTypes.func.isRequired,\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ])\r\n}\r\n","const SET_NOTE = 'SET_NOTE'\r\nconst SET_NOTE_ID = 'SET_NOTE_ID'\r\n\r\nconst initialState = {\r\n  notesList: JSON.parse(localStorage.getItem('arrNotes')) || [],\r\n  noteId: 0\r\n}\r\n\r\nexport function notesReducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_NOTE:\r\n      return { ...state, notesList: action.payload }\r\n\r\n    case SET_NOTE_ID:\r\n      return { ...state, noteId: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport function setNotes (notesList) {\r\n  return {\r\n    type: 'SET_NOTE',\r\n    payload: notesList\r\n  }\r\n}\r\n\r\nexport function setNoteId (noteId) {\r\n  return {\r\n    type: 'SET_NOTE_ID',\r\n    payload: noteId\r\n  }\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport _ from 'lodash'\r\nimport { arrRenameFolder } from '../helper'\r\nimport ContextMenu from './contextMenu'\r\nimport { connect } from 'react-redux'\r\nimport { setFolder, setFolderId } from '../../../reducersFolder/folderReducer'\r\nimport { setNoteId } from '../../../reducersFolder/notesReducer'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    '& .MuiListItem-root': {\r\n      height: '20px',\r\n      padding: '15px 0px 15px 15px'\r\n    }\r\n  },\r\n  listItemStyle: {\r\n    height: '20px',\r\n    padding: '15px 0px 15px 15px'\r\n  },\r\n  rootInput: {\r\n    '& .Mui-focused': {\r\n      backgroundColor: '#75c1ff'\r\n    },\r\n    '& .Mui-disabled': {\r\n      color: 'black',\r\n      backgroundColor: 'none'\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { foldersList, folderId } = store.folder\r\n  const { noteId } = store.notes\r\n  return {\r\n    foldersList,\r\n    folderId,\r\n    noteId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFolderAction: foldersList => dispatch(setFolder(foldersList)),\r\n    setFolderIdAction: folderId => dispatch(setFolderId(folderId)),\r\n    setNoteIdAction: noteId => dispatch(setNoteId(noteId))\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  mouseX: null,\r\n  mouseY: null\r\n}\r\n\r\nfunction FolderItem (props, event) {\r\n  const classes = useStyles()\r\n  const { foldersList, folderId, setFolderIdAction, setFolderAction, itemId, itemName, itemStatus, setNoteIdAction, noteId } = props\r\n  const uniqid = require('uniqid')\r\n  const wrapperRef = useRef(null)\r\n  const [contextMenu, setContextMenu] = useState(initialState)\r\n\r\n  function useOutsideClose (ref) {\r\n    useEffect(() => {\r\n      function handleClickOutside (event) {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          const status = true\r\n          const newData = _.cloneDeep(foldersList)\r\n          setFolderAction(arrRenameFolder(newData, folderId, itemName, status))\r\n        }\r\n      }\r\n      document.addEventListener('mousedown', handleClickOutside)\r\n      return () => {\r\n        document.removeEventListener('mousedown', handleClickOutside)\r\n      }\r\n    }, [ref])\r\n  }\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    if (folderId !== itemId) {\r\n      setFolderIdAction(index)\r\n    }\r\n    if (noteId !== 0) {\r\n      setNoteIdAction(0)\r\n    }\r\n  }\r\n\r\n  const handleDoubleClick = (event) => {\r\n    event.preventDefault()\r\n    setContextMenu({\r\n      mouseX: event.clientX - 2,\r\n      mouseY: event.clientY - 4\r\n    })\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    const newData = _.cloneDeep(foldersList)\r\n    setFolderAction(arrRenameFolder(newData, folderId, event.target.value, itemStatus))\r\n  }\r\n\r\n  if (itemStatus === false) {\r\n    useOutsideClose(wrapperRef)\r\n  }\r\n\r\n  return (\r\n    <div ref={wrapperRef} className={classes.root}>\r\n      <ListItem\r\n        key={uniqid()}\r\n        button\r\n        onDoubleClick={handleDoubleClick}\r\n        selected={folderId === itemId}\r\n        onClick={(event) => handleListItemClick(event, itemId)}\r\n      >\r\n        <ListItemText\r\n          primary={\r\n            <TextField\r\n              id={itemId}\r\n              className={classes.rootInput}\r\n              defaultValue={itemName}\r\n              onChange={handleOnChange}\r\n              InputProps={{\r\n                disableUnderline: true,\r\n                disabled: itemStatus,\r\n                autoFocus: true\r\n              }}\r\n            />\r\n          }\r\n        />\r\n      </ListItem>\r\n      <ContextMenu\r\n        posContextMenu={contextMenu}\r\n        setPosContextMenu={setContextMenu}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FolderItem)\r\n\r\nFolderItem.propTypes = {\r\n  itemId: PropTypes.string.isRequired,\r\n  itemName: PropTypes.string.isRequired,\r\n  itemStatus: PropTypes.bool.isRequired,\r\n  setFolderAction: PropTypes.func.isRequired,\r\n  foldersList: PropTypes.array.isRequired,\r\n  setFolderIdAction: PropTypes.func.isRequired,\r\n  setNoteIdAction: PropTypes.func.isRequired,\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ])\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport { connect } from 'react-redux'\r\nimport FolderItem from './folderItem'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    overflow: 'auto',\r\n    width: '100%',\r\n    backgroundColor: 'none',\r\n    paddingTop: '0px'\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { foldersList } = store.folder\r\n  return {\r\n    foldersList\r\n  }\r\n}\r\n\r\nfunction SelectedListItem (props) {\r\n  const classes = useStyles()\r\n  const { foldersList } = props\r\n  const uniqid = require('uniqid')\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n          {foldersList.map((item, index) => (\r\n            <FolderItem\r\n              key={uniqid()}\r\n              itemId={item.id}\r\n              itemName={item.name}\r\n              itemStatus={item.disableInput}\r\n            />\r\n          ))}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(SelectedListItem)\r\n\r\nSelectedListItem.propTypes = {\r\n  foldersList: PropTypes.array.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport { connect } from 'react-redux'\r\nimport { setFolder } from '../../../reducersFolder/folderReducer'\r\nimport { arrPusher } from '../helper'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    textTransform: 'none',\r\n    fontWeight: 'bold',\r\n    width: '100%',\r\n    display: '  flex',\r\n    justifyContent: 'flex-start',\r\n    paddingLeft: '15px'\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { foldersList } = store.folder\r\n  return {\r\n    foldersList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFolderAction: foldersList => dispatch(setFolder(foldersList))\r\n  }\r\n}\r\n\r\nfunction IconLabelButtons (props) {\r\n  const classes = useStyles()\r\n  const { foldersList, setFolderAction } = props\r\n  const newData = _.cloneDeep(foldersList)\r\n\r\n  const handleButtonClick = () => {\r\n    setFolderAction(arrPusher(newData))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.buttonStyle}>\r\n      <Button\r\n        className={classes.root}\r\n        startIcon={<AddCircleOutlineIcon />}\r\n        onClick={handleButtonClick}\r\n      >\r\n        New Folder\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IconLabelButtons)\r\n\r\nIconLabelButtons.propTypes = {\r\n  foldersList: PropTypes.array.isRequired,\r\n  setFolderAction: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport SelectedListItem from './folderList/index'\r\nimport IconLabelButtons from './newFolderButton/Index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    '& > *': {\r\n      display: 'flex',\r\n      height: '95vh',\r\n      flexDirection: 'column',\r\n      justifyContent: 'space-between',\r\n      backgroundColor: '#f7f6f7'\r\n    }\r\n  }\r\n}))\r\n\r\nexport default function LeftBlock () {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper variant=\"outlined\" square>\r\n        <SelectedListItem/>\r\n        <IconLabelButtons/>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n","import _ from 'lodash'\r\n\r\nconst options = {\r\n  year: 'numeric',\r\n  month: 'long',\r\n  day: 'numeric',\r\n  weekday: 'long',\r\n  hour: 'numeric',\r\n  minute: 'numeric'\r\n}\r\n// func for add new note\r\nexport const arrPusher = (arr, folderId) => {\r\n  const uniqid = require('uniqid')\r\n  const date = new Date()\r\n  arr.push({\r\n    id: uniqid(),\r\n    folderId: folderId,\r\n    name: 'New Note',\r\n    disableInput: true,\r\n    date: date.toLocaleDateString(),\r\n    dateNote: date.toLocaleString('en-US', options)\r\n  })\r\n  localStorage.setItem('arrNotes', JSON.stringify(arr))\r\n  return (arr)\r\n}\r\n// func for remove note\r\nexport const arrRemoveNote = (arr, noteId) => {\r\n  const newArr = _.filter(arr, function (item) { return item.id !== noteId })\r\n  localStorage.setItem('arrNotes', JSON.stringify(newArr))\r\n  return (newArr)\r\n}\r\n// func for change note name\r\nexport const arrRenameNote = (arr, Id, value, status) => {\r\n  const newArr = arr.map(function (item) {\r\n    if (item.id === Id) {\r\n      return (\r\n        {\r\n          id: item.id,\r\n          folderId: item.folderId,\r\n          name: value,\r\n          disableInput: status,\r\n          noteValue: item.noteValue || '',\r\n          date: item.date,\r\n          dateNote: item.dateNote\r\n        }\r\n      )\r\n    } else {\r\n      return (item)\r\n    }\r\n  })\r\n  localStorage.setItem('arrNotes', JSON.stringify(newArr))\r\n  return (newArr)\r\n}\r\n// func for change note status flag\r\nexport const changeStatusNote = (arr, Id) => {\r\n  const newArr = arr.map(function (item) {\r\n    if (item.id === Id) {\r\n      return (\r\n        {\r\n          id: item.id,\r\n          folderId: item.folderId,\r\n          name: item.name,\r\n          disableInput: false,\r\n          noteValue: item.noteValue || '',\r\n          date: item.date,\r\n          dateNote: item.dateNote\r\n        }\r\n      )\r\n    } else {\r\n      return (item)\r\n    }\r\n  })\r\n  return (newArr)\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport _ from 'lodash'\r\nimport { arrPusher, arrRemoveNote, changeStatusNote } from '../helper'\r\nimport { connect } from 'react-redux'\r\nimport { setNotes, setNoteId } from '../../../reducersFolder/notesReducer'\r\n\r\nconst initialState = {\r\n  mouseX: null,\r\n  mouseY: null\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  const { notesList, noteId } = store.notes\r\n  const { folderId } = store.folder\r\n  return {\r\n    notesList,\r\n    noteId,\r\n    folderId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNotesAction: notesList => dispatch(setNotes(notesList)),\r\n    setNoteIdAction: noteId => dispatch(setNoteId(noteId))\r\n  }\r\n}\r\n\r\nfunction ContextMenu (props) {\r\n  const { setNotesAction, notesList, setNoteIdAction, noteId, posContextMenu, setPosContextMenu, folderId } = props\r\n  const { mouseX, mouseY } = posContextMenu\r\n\r\n  const handleClose = () => {\r\n    setPosContextMenu(initialState)\r\n  }\r\n\r\n  const addNoteButton = () => {\r\n    const newData = _.cloneDeep(notesList)\r\n    setNotesAction(arrPusher(newData, folderId))\r\n    handleClose()\r\n  }\r\n\r\n  const renameNoteButton = (event) => {\r\n    handleClose()\r\n    const newData = _.cloneDeep(notesList)\r\n    setNotesAction(changeStatusNote(newData, noteId))\r\n  }\r\n\r\n  const removeNoteButton = () => {\r\n    const newData = _.cloneDeep(notesList)\r\n    setNotesAction(arrRemoveNote(newData, noteId))\r\n    setNoteIdAction(0)\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <div style={{ cursor: 'context-menu' }}>\r\n      <Menu\r\n        keepMounted\r\n        open={mouseY !== null}\r\n        onClose={handleClose}\r\n        anchorReference=\"anchorPosition\"\r\n        anchorPosition={\r\n          mouseY !== null && mouseX !== null\r\n            ? { top: mouseY, left: mouseX }\r\n            : undefined\r\n        }\r\n      >\r\n        <MenuItem onClick={addNoteButton}>Add Note</MenuItem>\r\n        <MenuItem onClick={renameNoteButton}>Rename Note</MenuItem>\r\n        <MenuItem onClick={removeNoteButton}>Delete Note</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ContextMenu)\r\n\r\nContextMenu.propTypes = {\r\n  setNotesAction: PropTypes.func.isRequired,\r\n  notesList: PropTypes.array.isRequired,\r\n  setPosContextMenu: PropTypes.func.isRequired,\r\n  posContextMenu: PropTypes.object.isRequired,\r\n  setNoteIdAction: PropTypes.func.isRequired,\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ])\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport _ from 'lodash'\r\nimport { arrRenameNote } from '../helper'\r\nimport ContextMenu from './contextMenu'\r\nimport { connect } from 'react-redux'\r\nimport { setNotes, setNoteId } from '../../../reducersFolder/notesReducer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .Mui-selected': {\r\n      backgroundColor: '#fde46e'\r\n    },\r\n    '& .MuiListItemText-root': {\r\n      flex: '0'\r\n    },\r\n    '& .MuiListItem-root': {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'flex-start',\r\n      paddingLeft: '40px'\r\n    }\r\n  },\r\n  rootInput: {\r\n    '& .Mui-focused': {\r\n      backgroundColor: '#75c1ff'\r\n    },\r\n    '& .Mui-disabled': {\r\n      color: 'black',\r\n      backgroundColor: 'none'\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { notesList, noteId } = store.notes\r\n  const { folderId } = store.folder\r\n  return {\r\n    notesList,\r\n    noteId,\r\n    folderId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNotesAction: notesList => dispatch(setNotes(notesList)),\r\n    setNoteIdAction: noteId => dispatch(setNoteId(noteId))\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  mouseX: null,\r\n  mouseY: null\r\n}\r\n\r\nfunction NotesItem (props, event) {\r\n  const classes = useStyles()\r\n  const { notesList, noteId, setNoteIdAction, setNotesAction, itemId, itemName, itemStatus, folderId, itemDate } = props\r\n  const uniqid = require('uniqid')\r\n  const wrapperRef = useRef(null)\r\n  const [contextMenu, setContextMenu] = useState(initialState)\r\n\r\n  function useOutsideClose (ref) {\r\n    useEffect(() => {\r\n      function handleClickOutside (event) {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          const status = true\r\n          const newData = _.cloneDeep(notesList)\r\n          setNotesAction(arrRenameNote(newData, noteId, itemName, status, folderId))\r\n        }\r\n      }\r\n      document.addEventListener('mousedown', handleClickOutside)\r\n      return () => {\r\n        document.removeEventListener('mousedown', handleClickOutside)\r\n      }\r\n    }, [ref])\r\n  }\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    if (noteId !== itemId) {\r\n      setNoteIdAction(index)\r\n    }\r\n  }\r\n\r\n  const handleDoubleClick = (event) => {\r\n    event.preventDefault()\r\n    setContextMenu({\r\n      mouseX: event.clientX - 2,\r\n      mouseY: event.clientY - 4\r\n    })\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    const newData = _.cloneDeep(notesList)\r\n    setNotesAction(arrRenameNote(newData, noteId, event.target.value, itemStatus))\r\n  }\r\n\r\n  if (itemStatus === false) {\r\n    useOutsideClose(wrapperRef)\r\n  }\r\n\r\n  return (\r\n    <div ref={wrapperRef} className={classes.root}>\r\n      <ListItem\r\n        key={uniqid()}\r\n        button\r\n        onDoubleClick={handleDoubleClick}\r\n        selected={noteId === itemId}\r\n        onClick={(event) => handleListItemClick(event, itemId)}\r\n      >\r\n        <ListItemText\r\n          primary={\r\n            <TextField\r\n              id={itemId}\r\n              className={classes.rootInput}\r\n              value={itemName}\r\n              onChange={handleOnChange}\r\n              InputProps={{\r\n                disableUnderline: true,\r\n                disabled: itemStatus,\r\n                autoFocus: true\r\n              }}\r\n            />\r\n          }\r\n        />\r\n        <div>{itemDate}</div>\r\n      </ListItem>\r\n      <ContextMenu\r\n        posContextMenu={contextMenu}\r\n        setPosContextMenu={setContextMenu}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NotesItem)\r\n\r\nNotesItem.propTypes = {\r\n  itemId: PropTypes.string.isRequired,\r\n  itemName: PropTypes.string.isRequired,\r\n  itemDate: PropTypes.string.isRequired,\r\n  itemStatus: PropTypes.bool.isRequired,\r\n  setNotesAction: PropTypes.func.isRequired,\r\n  notesList: PropTypes.array.isRequired,\r\n  setNoteIdAction: PropTypes.func.isRequired,\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ])\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport { connect } from 'react-redux'\r\nimport NotesItem from './notesItem'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    overflow: 'auto',\r\n    backgroundColor: 'none',\r\n    '& > *': {\r\n      padding: '0px',\r\n      width: '100%'\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { notesList } = store.notes\r\n  const { folderId } = store.folder\r\n  return {\r\n    notesList,\r\n    folderId\r\n  }\r\n}\r\n\r\nfunction SelectedListItem (props) {\r\n  const classes = useStyles()\r\n  const { notesList, folderId } = props\r\n  const uniqid = require('uniqid')\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n        {_.filter(notesList, function (item) { return item.folderId === folderId }).map((item, index) => (\r\n          <NotesItem\r\n            key={uniqid()}\r\n            itemId={item.id}\r\n            itemName={item.name}\r\n            itemStatus={item.disableInput}\r\n            itemDate={item.date}\r\n          />\r\n        ))}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(SelectedListItem)\r\n\r\nSelectedListItem.propTypes = {\r\n  notesList: PropTypes.array.isRequired,\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ])\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport SelectedListItem from './notesList'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    '& > *': {\r\n      display: 'flex',\r\n      height: '95vh',\r\n      flexDirection: 'column',\r\n      justifyContent: 'space-between',\r\n      backgroundColor: '#f7f6f7'\r\n    }\r\n  }\r\n}))\r\n\r\nexport default function CenterBlock () {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper variant=\"outlined\" square>\r\n        <SelectedListItem style={{}}/>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  timeStyle: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    color: '#bababa',\r\n    marginTop: '20px'\r\n  }\r\n}))\r\n\r\nexport default function NoteTime (props) {\r\n  const classes = useStyles()\r\n  const { itemTime } = props\r\n\r\n  return (\r\n    <div className={classes.timeStyle}>\r\n         {itemTime}\r\n    </div>\r\n  )\r\n}\r\n\r\nNoteTime.propTypes = {\r\n  itemTime: PropTypes.string.isRequired\r\n}\r\n","// func for change note value\r\nexport const arrChangeValueNote = (arr, Id, value) => {\r\n  const newArr = arr.map(function (item) {\r\n    if (item.id === Id) {\r\n      return (\r\n        {\r\n          id: item.id,\r\n          folderId: item.folderId,\r\n          name: item.name,\r\n          disableInput: true,\r\n          noteValue: value,\r\n          date: item.date,\r\n          dateNote: item.dateNote\r\n        }\r\n      )\r\n    } else {\r\n      return (item)\r\n    }\r\n  })\r\n  localStorage.setItem('arrNotes', JSON.stringify(newArr))\r\n  return (newArr)\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { setNoteId, setNotes } from '../../reducersFolder/notesReducer'\r\nimport { arrChangeValueNote } from './helper'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textAreaStyle: {\r\n    width: '99%',\r\n    border: '0px',\r\n    height: '85vh',\r\n    resize: 'none',\r\n    outline: 'none',\r\n    backgroundColor: '#f7f6f7',\r\n    marginTop: '20px'\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { noteId, notesList } = store.notes\r\n\r\n  return {\r\n    noteId,\r\n    notesList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNoteIdAction: noteId => dispatch(setNoteId(noteId)),\r\n    setNotesAction: notesList => dispatch(setNotes(notesList))\r\n  }\r\n}\r\n\r\nfunction NoteTextArea (props) {\r\n  const classes = useStyles()\r\n  const { noteId, notesList, setNotesAction, defaultValue } = props\r\n\r\n  const handleOnlChange = (event) => {\r\n    const newData = _.cloneDeep(notesList)\r\n    setNotesAction(arrChangeValueNote(newData, noteId, event.target.value))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <textarea\r\n            className={classes.textAreaStyle}\r\n            defaultValue={defaultValue}\r\n            onBlur={handleOnlChange}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NoteTextArea)\r\n\r\nNoteTextArea.propTypes = {\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  notesList: PropTypes.array.isRequired,\r\n  setNotesAction: PropTypes.func.isRequired,\r\n  defaultValue: PropTypes.string\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport NoteTime from './noteTime'\r\nimport NoteTextArea from './noteTextArea'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    '& > *': {\r\n      display: 'flex',\r\n      height: '95vh',\r\n      flexDirection: 'column',\r\n      backgroundColor: '#f7f6f7'\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { noteId, notesList } = store.notes\r\n\r\n  return {\r\n    noteId,\r\n    notesList\r\n  }\r\n}\r\n\r\nfunction NoteText (props) {\r\n  const classes = useStyles()\r\n  const { noteId, notesList } = props\r\n  const uniqid = require('uniqid')\r\n  const currItem = _.filter(notesList, function (item) { return item.id === noteId })\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper variant=\"outlined\" square>\r\n        {currItem.map((item) => (\r\n          <div key={uniqid()}>\r\n            <NoteTime itemTime={item.dateNote}/>\r\n            <NoteTextArea defaultValue={item.noteValue}/>\r\n          </div>\r\n        ))}\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(NoteText)\r\n\r\nNoteText.propTypes = {\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  notesList: PropTypes.array.isRequired\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      height: '10px',\r\n      width: '10px',\r\n      borderRadius: '10px',\r\n      margin: '7px 0px 0px 5px'\r\n    }\r\n  },\r\n  redButton: {\r\n    backgroundColor: '#fd5a52'\r\n  },\r\n  yellowButton: {\r\n    backgroundColor: '#fdbb3f'\r\n  },\r\n  greenButton: {\r\n    backgroundColor: '#31c747'\r\n  }\r\n}))\r\n\r\nexport default function ClosingMenu () {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <div className={classes.redButton}></div>\r\n        <div className={classes.yellowButton}></div>\r\n        <div className={classes.greenButton}></div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { setNotes, setNoteId } from '../../reducersFolder/notesReducer'\r\nimport { setFolder, setFolderId } from '../../reducersFolder/folderReducer'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ViewCompactOutlinedIcon from '@material-ui/icons/ViewCompactOutlined'\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined'\r\nimport NoteAddOutlinedIcon from '@material-ui/icons/NoteAddOutlined'\r\nimport { arrPusher, arrRemoveNote } from '../notesBlock/helper'\r\nimport { arrRemoveFolder } from '../folderBlock/helper'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    marginLeft: '30%',\r\n    '& > *': {\r\n      marginLeft: '15px',\r\n      marginTop: '5px',\r\n      padding: '0px',\r\n      width: '40px',\r\n      height: '20px',\r\n      borderRadius: '3px',\r\n      backgroundColor: '#f5f5f5',\r\n      boxShadow: '0 5px 4px -4px rgba(0, 0, 0, .2) '\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { noteId, notesList } = store.notes\r\n  const { folderId, foldersList } = store.folder\r\n\r\n  return {\r\n    noteId,\r\n    folderId,\r\n    notesList,\r\n    foldersList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNotesAction: notesList => dispatch(setNotes(notesList)),\r\n    setNoteIdAction: noteId => dispatch(setNoteId(noteId)),\r\n    setFolderAction: foldersList => dispatch(setFolder(foldersList)),\r\n    setFolderIdAction: folderId => dispatch(setFolderId(folderId))\r\n  }\r\n}\r\n\r\nfunction ButtonsBlock (props) {\r\n  const classes = useStyles()\r\n  const { folderListDisplay, setFolderListDisplay, notesList, folderId, setNotesAction, setNoteIdAction, noteId, foldersList, setFolderAction, setFolderIdAction } = props\r\n\r\n  const changeDisplay = () => {\r\n    if (folderListDisplay === 'block') {\r\n      setFolderListDisplay('none')\r\n    } else {\r\n      setFolderListDisplay('block')\r\n    }\r\n  }\r\n\r\n  const addNoteButton = () => {\r\n    if (folderId !== 0) {\r\n      const newData = _.cloneDeep(notesList)\r\n      setNotesAction(arrPusher(newData, folderId))\r\n    }\r\n  }\r\n\r\n  const removeActiveElement = () => {\r\n    const newDataFolders = _.cloneDeep(foldersList)\r\n    const newDataNotes = _.cloneDeep(notesList)\r\n    if (noteId === 0) {\r\n      setFolderAction(arrRemoveFolder(newDataFolders, newDataNotes, folderId))\r\n      setFolderIdAction(0)\r\n    } else {\r\n      setNotesAction(arrRemoveNote(newDataNotes, noteId))\r\n      setNoteIdAction(0)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton aria-label='Close/Open folder list' onClick={changeDisplay}>\r\n        <ViewCompactOutlinedIcon fontSize='small'/>\r\n      </IconButton>\r\n      <IconButton aria-label='Delete current element' onClick={removeActiveElement}>\r\n        <DeleteOutlineOutlinedIcon fontSize='small' />\r\n      </IconButton>\r\n      <IconButton aria-label='Add note' onClick={addNoteButton}>\r\n        <NoteAddOutlinedIcon fontSize='small' />\r\n      </IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ButtonsBlock)\r\n\r\nButtonsBlock.propTypes = {\r\n  noteId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  folderId: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired\r\n  ]),\r\n  notesList: PropTypes.array.isRequired,\r\n  foldersList: PropTypes.array.isRequired,\r\n  setNotesAction: PropTypes.func.isRequired,\r\n  setFolderAction: PropTypes.func.isRequired,\r\n  setNoteIdAction: PropTypes.func.isRequired,\r\n  setFolderIdAction: PropTypes.func.isRequired,\r\n  folderListDisplay: PropTypes.string.isRequired,\r\n  setFolderListDisplay: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ClosingMenu from './closingMenu'\r\nimport ButtonsBlock from './buttonsBlock'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '30px',\r\n    backgroundColor: '#e1dee1',\r\n    borderTopLeftRadius: '5px',\r\n    borderTopRightRadius: '5px',\r\n    boxShadow: '0 0 5px white inset',\r\n    display: 'flex'\r\n  }\r\n}))\r\n\r\nexport default function TopMenu (props) {\r\n  const classes = useStyles()\r\n  const { folderListDisplay, setFolderListDisplay } = props\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ClosingMenu/>\r\n      <ButtonsBlock folderListDisplay={folderListDisplay} setFolderListDisplay={setFolderListDisplay} />\r\n    </div>\r\n  )\r\n}\r\n\r\nTopMenu.propTypes = {\r\n  folderListDisplay: PropTypes.string.isRequired,\r\n  setFolderListDisplay: PropTypes.func.isRequired\r\n}\r\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport LeftBlock from './components/folderBlock/Index'\nimport CenterBlock from './components/notesBlock/Index'\nimport NoteText from './components/note/index'\nimport TopMenu from './components/topMenu/index'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  topMenu: {\n    margin: '1px 1px 0px 1px',\n    display: 'flex'\n  },\n  main: {\n    display: 'flex',\n    height: '95vh'\n  },\n  center: {\n    flex: '0 25%'\n  },\n  right: {\n    flex: '1 50%'\n  }\n}))\n\nfunction App () {\n  const [folderListDisplay, setFolderListDisplay] = useState('block')\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <div className={classes.topMenu}>\n        <TopMenu folderListDisplay={folderListDisplay} setFolderListDisplay={setFolderListDisplay}/>\n      </div>\n      <div className={classes.main}>\n        <div style={{ flex: '0 25%', display: folderListDisplay }}><LeftBlock/></div>\n        <div className={classes.center}><CenterBlock/></div>\n        <div className={classes.right}><NoteText/></div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import 'web-vitals'\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    ('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { combineReducers } from 'redux'\r\nimport { folderReducer } from './folderReducer'\r\nimport { notesReducer } from './notesReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  folder: folderReducer,\r\n  notes: notesReducer\r\n})\r\n","import { createStore } from 'redux'\r\nimport { rootReducer } from '../reducersFolder/index'\r\nimport { devToolsEnhancer } from 'redux-devtools-extension'\r\n\r\nexport const store = createStore(rootReducer, devToolsEnhancer())\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from './storeFolder/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}